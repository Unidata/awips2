#********************************************************************
# Wrapper Properties
#********************************************************************
wrapper.debug=false
wrapper.java.debug.port=${EDEX_DEBUG_PORT}
set.default.EDEX_HOME=../..
wrapper.working.dir=${EDEX_HOME}/bin
# required due to java bug: 
# http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4388188
# not sure if the yajsw developers have any intention of
# implementing the work-around (solution?) stated in the
# ticket.
wrapper.fork_hack=true
# at a minimum: prevents the printing of the "Invalid parameter" messages
wrapper.console.pipestreams=true

# Java Application
wrapper.java.command=${JAVA_HOME}/bin/java

# necessary for etc/init.d/edex_camel
wrapper.pidfile=${EDEX_HOME}/bin/${EDEX_RUN_MODE}.pid

# use system java instead of awips2 java
wrapper.app.env.use.system.java=${WRAPPER_USE_SYSTEM_JAVA}

# Java Classpath. Add class path elements as needed starting from 1.
wrapper.java.classpath.1=${EDEX_HOME}/conf/
wrapper.java.classpath.2=${EDEX_HOME}/conf/cache/
wrapper.java.classpath.3=${EDEX_HOME}/conf/spring/
wrapper.java.classpath.4=${EDEX_HOME}/conf/resources/

# include ANY jar files that are found in the locations denoted by
# wrapper.search.java.classpath.#
wrapper.search.java.classpath.1=${EDEX_HOME}/lib/dependencies
wrapper.search.java.classpath.2=${EDEX_HOME}/lib/plugins

# set the umask for file/directory creation by the Java process
wrapper.java.umask=0002

# Java Library Path
wrapper.java.library.path.1=${LD_LIBRARY_PATH}
# both the 32-bit and 64-bit paths are needed for 64-bit EDEX
# presumably due to the 32-bit hydro libraries
wrapper.java.library.path.2=${EDEX_HOME}/lib/native/linux32/
wrapper.java.library.path.3=${EDEX_HOME}/lib/native/linux64/

# Java Additional Parameters
# note that n is the parameter number starting from 1.
wrapper.java.additional.1=-Dedex.run.mode=${EDEX_RUN_MODE}
wrapper.java.additional.2=-Dedex.home=${EDEX_HOME}

# Use wrapper.jvm.parameter.order.# to specify the order
# that the jvm parameters should be included in the command.
# There cannot be duplicate numbered parameters otherwise
# one will always take precedence over the other. Use
# wrapper.jvm.parameter.order.LAST to specify a parameter
# that should always be the last jvm parameter without
# needing to specify the order of every individual jvm parameter.
wrapper.jvm.parameter.order.1=-Dedex.run.mode
# since it is used to determine whether a particular
# instance of EDEX is running or not.
wrapper.jvm.parameter.order.2=-Daw.site.identifier
wrapper.jvm.parameter.order.LAST=-classpath

# disables JMX in Camel and speeds up EDEX startup and performance
wrapper.java.additional.4=-Dorg.apache.camel.jmx.disabled=true

# Enforces GMT to be used as the timezone
wrapper.java.additional.5=-Duser.timezone=GMT

# Set default tmp to awips controlled directory for security
wrapper.java.additional.6=-Djava.io.tmpdir=${AWIPS2_TEMP}

# garbage collection settings
wrapper.java.additional.gc.1=-XX:+UseConcMarkSweepGC
wrapper.java.additional.gc.2=-XX:+HeapDumpOnOutOfMemoryError
wrapper.java.additional.gc.3=-XX:HeapDumpPath=/awips2/data/fxa/cave/${SHORT_HOSTNAME}/
wrapper.java.additional.gc.4=-XX:SoftRefLRUPolicyMSPerMB=${SOFT_REF_LRU_POLICY_MS_PER_MB}

wrapper.java.additional.stacktraces.1=-XX:-OmitStackTraceInFastThrow

# use qpid binding URL instead of default address string format
wrapper.java.additional.qpid.1=-Dqpid.dest_syntax=BURL

# hibernate.cfg.xml cannot read from ENV variables but can read from Java system properties 
wrapper.java.additional.db.1=-Ddb.addr=${DB_HOST}
wrapper.java.additional.db.2=-Ddb.port=${DB_PORT}
wrapper.java.additional.db.3=-Ddc.db.name=${DC_DB_NAME}
wrapper.java.additional.db.4=-Dfxa.db.name=${FXA_DB_NAME}
wrapper.java.additional.db.5=-Dhm.db.name=${HM_DB_NAME}
wrapper.java.additional.db.6=-Dih.db.name=${IH_DB_NAME}
wrapper.java.additional.db.7=-Ddb.metadata.pool.max=${METADATA_POOL_MAX}
wrapper.java.additional.db.8=-Ddb.metadata.pool.timeout=${METADATA_POOL_TIMEOUT}
wrapper.java.additional.db.9=-Ddb.auth.dir=${EDEX_HOME}/conf/db/auth
wrapper.java.additional.db.10=-Ddb.auth.sslmode=${DB_SSLMODE}
wrapper.java.additional.db.11=-Dclimate.db.name=${CLIMATE_DB_NAME}

# site ID of EDEX for localization and site aware services
wrapper.java.additional.site.1=-Daw.site.identifier=${AW_SITE_IDENTIFIER}

# the archive root directory, also where the edex/data/manual endpoint will place files
wrapper.java.additional.archive.1=-Ddata.archive.root=${DATA_ARCHIVE_ROOT}

# determines which log config file to use
wrapper.java.additional.log.1=-Dlogback.configurationFile=logback-${EDEX_RUN_MODE}.xml

# only allows warn and error status messages from logback's internal status logger
# Note that setting the debug="true" flag on a logback configuration file will override this
# and allow info/debug messages through.
wrapper.java.additional.log.2=-Dlogback.statusListenerClass=com.raytheon.uf.common.logback.UFLogbackInternalStatusListener

# to keep c3p0 from filling up logs since they just had to not use a standard logging API
wrapper.java.additional.log.3=-Dcom.mchange.v2.log.MLog=com.mchange.v2.log.FallbackMLog
wrapper.java.additional.log.4=-Dcom.mchange.v2.log.FallbackMLog.DEFAULT_CUTOFF_LEVEL=OFF

# to get java.util.logging to go into slf4j....don't use java.util.logging, this is only for open src plugins using it
wrapper.java.additional.log.5=-Djava.util.logging.config.file=${EDEX_HOME}/conf/logging.properties

# the max size in MB of any stream sent to thrift, this prevents the OutOfMemory
# errors reported by thrift sometimes when the stream is corrupt/incorrect
wrapper.java.additional.thrift.maxStreamSize=-Dthrift.stream.maxsize=200

#wrapper.java.additional.retain.failed=-Dretain.failed.data=${RETAIN_FAILED}

# enables yourkit profiling, determined by flag to start.sh
wrapper.java.additional.profile.1=${PROFILER_PARAM_1}

# sets the user preferences file to be unique to this JVM
wrapper.java.additional.prefs.1=-Djava.util.prefs.userRoot=${HOME}/.java/${HOSTNAME}-${EDEX_RUN_MODE}.userPrefs

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=${INIT_MEM}

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=${MAX_MEM}

wrapper.java.app.mainclass=com.raytheon.uf.edex.esb.Main
# Application parameters. Add parameters as needed starting from 2
wrapper.app.parameter.2=start

wrapper.ping.timeout=30

# NOTE: script must be located at /awips2/yajsw/scripts for it to be found
wrapper.script.ABORT=wrapperCapture.sh
wrapper.script.ABORT.timeout=120
wrapper.script.RESTART=wrapperCapture.sh
wrapper.script.RESTART.timeout=120

# jvm will be hard killed after 1 minute of trying to shutdown
wrapper.jvm_exit.timeout=0
wrapper.shutdown.timeout=60

#********************************************************************
# Monitor the Application
#********************************************************************
wrapper.java.monitor.heap = true
# warning messages will be logged; it is also possible to send an e-mail
wrapper.java.monitor.heap.threshold.percent = 90

wrapper.java.monitor.deadlock = true
# application will be restarted and a warning message will be logged
wrapper.filter.trigger.deadlock=wrapper.java.monitor.deadlock: DEADLOCK IN THREADS:
wrapper.filter.action.deadlock=${WRAPPER_DEADLOCK_ACTION}

# restart the application if it crashes
wrapper.on_exit.default=${WRAPPER_ON_EXIT_ACTION}
# restart the application if it runs out of memory
wrapper.filter.trigger.oom=java.lang.OutOfMemoryError
wrapper.filter.action.oom=${WRAPPER_TRIGGER_ACTION}

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=M

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=${CONSOLE_LOGLEVEL}

# Log file to use for wrapper output logging.
wrapper.logfile=${EDEX_WRAPPER_LOGFILE}

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=${EDEX_WRAPPER_LOGFILE_FORMAT}

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Set the log rollover mode for the log.
#   DATE - creates a new file each day - file name must include YYYYMMDD.
#   SIZE - uses log size for log roll-over.
wrapper.logfile.rollmode=DATE

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
# Note: ignored for wrapper.logfile.rollmode=DATE
wrapper.logfile.maxsize=1000m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=30

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=INFO

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=EDEX ${EDEX_RUN_MODE}

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=EDEX

# Display name of the service
wrapper.ntservice.displayname=EDEX

# Description of the service
wrapper.ntservice.description=EDEX ESB

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

# Specify the location that temporary files should be written to
wrapper.tmp.dir=${AWIPS2_TEMP}
