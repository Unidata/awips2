<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/spring
    http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="oupAckMgr" class="com.raytheon.uf.edex.dissemination.OUPAckManager" />
    <bean id="oupHandler" class="com.raytheon.uf.edex.dissemination.OUPHandler">
        <property name="ackManager" ref="oupAckMgr" />
    </bean>
    <bean id="oupTestHandler" class="com.raytheon.uf.edex.dissemination.OUPTestHandler">
        <property name="oupHandler" ref="oupHandler" />
    </bean>

    <camelContext id="handleoupAckMgrContext" xmlns="http://camel.apache.org/schema/spring"
        errorHandlerRef="errorHandler">
        <!-- Non clustered, specifically used by handleOUP.py to push published
            files directly into stream -->
        <!-- This route does not delete the file passed! If delete is needed, create
            a new route and use moveFileToArchive -->
        <route id="handleoupFilePush">
            <from
                uri="jms-durable:queue:Ingest.handleoup"/>
            <doTry>
                <bean ref="stringToFile" />
                <bean ref="manualProc" />
                <to
                    uri="jms-durable:queue:handleoup.dropbox"/>
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to
                        uri="log:oup?level=ERROR&amp;showBody=true" />
                </doCatch>
            </doTry>
        </route>

        <route id="oupAckMGrRoute">
            <from uri="jms-generic:topic:mhs.ackmgr" />
            <doTry>
                <bean ref="oupAckMgr" method="processAck" />
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:oup?level=INFO"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>

</beans>
