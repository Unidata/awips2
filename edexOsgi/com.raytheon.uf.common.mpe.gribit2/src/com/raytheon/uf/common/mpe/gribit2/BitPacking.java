/**
 * This software was developed and / or modified by Raytheon Company,
 * pursuant to Contract DG133W-05-CQ-1067 with the US Government.
 * 
 * U.S. EXPORT CONTROLLED TECHNICAL DATA
 * This software product contains export-restricted data whose
 * export/transfer/disclosure is restricted by U.S. law. Dissemination
 * to non-U.S. persons whether in the United States or abroad requires
 * an export license or other authorization.
 * 
 * Contractor Name:        Raytheon Company
 * Contractor Address:     6825 Pine Street, Suite 340
 *                         Mail Stop B8
 *                         Omaha, NE 68106
 *                         402.291.0100
 * 
 * See the AWIPS II Master Rights File ("Master Rights File.pdf") for
 * further licensing information.
 **/
package com.raytheon.uf.common.mpe.gribit2;

import org.apache.commons.lang3.StringUtils;

/**
 * POJO to store results generated by the {@link BitPackingCalculator}. Based
 * on: /rary.ohd.pproc.gribit/TEXT/getbit.f.
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * 
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Jul 26, 2016 4619       bkowal      Initial creation
 * Aug 11, 2016 4619       bkowal      Added {@link #bitsToPack}.
 * 
 * </pre>
 * 
 * @author bkowal
 */

public class BitPacking {

    private final double[] ground;

    private final double gmax;

    private final double gmin;

    private final int bitsToPack;

    public BitPacking(final double[] ground, final double gmax,
            final double gmin, final int bitsToPack) {
        this.ground = ground;
        this.gmax = gmax;
        this.gmin = gmin;
        this.bitsToPack = bitsToPack;
    }

    public double[] getGround() {
        return ground;
    }

    public double getGmax() {
        return gmax;
    }

    public double getGmin() {
        return gmin;
    }

    public int getBitsToPack() {
        return bitsToPack;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BitPacking [");
        sb.append("ground={").append(StringUtils.join(ground, ',')).append("}");
        sb.append(", gmax=").append(gmax);
        sb.append(", gmin=").append(gmin);
        sb.append(", bitsToPack=").append(bitsToPack);
        sb.append("]");
        return sb.toString();
    }
}