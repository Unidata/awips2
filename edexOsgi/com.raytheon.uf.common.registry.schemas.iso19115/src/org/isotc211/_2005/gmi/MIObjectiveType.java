//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.01.10 at 10:31:13 AM CST 
//


package org.isotc211._2005.gmi;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.isotc211._2005.gco.AbstractObjectType;
import org.isotc211._2005.gco.CharacterStringPropertyType;
import org.isotc211._2005.gmd.EXExtentPropertyType;
import org.isotc211._2005.gmd.MDIdentifierPropertyType;


/**
 * Description: Describes the characteristics, spatial and temportal extent of the intended object to be observed  - shortName: TargetId
 * 
 * <p>Java class for MI_Objective_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MI_Objective_Type">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.isotc211.org/2005/gco}AbstractObject_Type">
 *       &lt;sequence>
 *         &lt;element name="identifier" type="{http://www.isotc211.org/2005/gmd}MD_Identifier_PropertyType" maxOccurs="unbounded"/>
 *         &lt;element name="priority" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" minOccurs="0"/>
 *         &lt;element name="type" type="{http://www.isotc211.org/2005/gmi}MI_ObjectiveTypeCode_PropertyType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="function" type="{http://www.isotc211.org/2005/gco}CharacterString_PropertyType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="extent" type="{http://www.isotc211.org/2005/gmd}EX_Extent_PropertyType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="sensingInstrument" type="{http://www.isotc211.org/2005/gmi}MI_Instrument_PropertyType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="pass" type="{http://www.isotc211.org/2005/gmi}MI_PlatformPass_PropertyType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="objectiveOccurance" type="{http://www.isotc211.org/2005/gmi}MI_Event_PropertyType" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MI_Objective_Type", propOrder = {
    "identifier",
    "priority",
    "type",
    "function",
    "extent",
    "sensingInstrument",
    "pass",
    "objectiveOccurance"
})
public class MIObjectiveType
    extends AbstractObjectType
{

    @XmlElement(required = true)
    protected List<MDIdentifierPropertyType> identifier;
    protected CharacterStringPropertyType priority;
    protected List<MIObjectiveTypeCodePropertyType> type;
    protected List<CharacterStringPropertyType> function;
    protected List<EXExtentPropertyType> extent;
    protected List<MIInstrumentPropertyType> sensingInstrument;
    protected List<MIPlatformPassPropertyType> pass;
    @XmlElement(required = true)
    protected List<MIEventPropertyType> objectiveOccurance;

    /**
     * Gets the value of the identifier property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the identifier property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIdentifier().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MDIdentifierPropertyType }
     * 
     * 
     */
    public List<MDIdentifierPropertyType> getIdentifier() {
        if (identifier == null) {
            identifier = new ArrayList<MDIdentifierPropertyType>();
        }
        return this.identifier;
    }

    /**
     * Gets the value of the priority property.
     * 
     * @return
     *     possible object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public CharacterStringPropertyType getPriority() {
        return priority;
    }

    /**
     * Sets the value of the priority property.
     * 
     * @param value
     *     allowed object is
     *     {@link CharacterStringPropertyType }
     *     
     */
    public void setPriority(CharacterStringPropertyType value) {
        this.priority = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the type property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MIObjectiveTypeCodePropertyType }
     * 
     * 
     */
    public List<MIObjectiveTypeCodePropertyType> getType() {
        if (type == null) {
            type = new ArrayList<MIObjectiveTypeCodePropertyType>();
        }
        return this.type;
    }

    /**
     * Gets the value of the function property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the function property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFunction().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CharacterStringPropertyType }
     * 
     * 
     */
    public List<CharacterStringPropertyType> getFunction() {
        if (function == null) {
            function = new ArrayList<CharacterStringPropertyType>();
        }
        return this.function;
    }

    /**
     * Gets the value of the extent property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extent property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EXExtentPropertyType }
     * 
     * 
     */
    public List<EXExtentPropertyType> getExtent() {
        if (extent == null) {
            extent = new ArrayList<EXExtentPropertyType>();
        }
        return this.extent;
    }

    /**
     * Gets the value of the sensingInstrument property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sensingInstrument property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSensingInstrument().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MIInstrumentPropertyType }
     * 
     * 
     */
    public List<MIInstrumentPropertyType> getSensingInstrument() {
        if (sensingInstrument == null) {
            sensingInstrument = new ArrayList<MIInstrumentPropertyType>();
        }
        return this.sensingInstrument;
    }

    /**
     * Gets the value of the pass property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the pass property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPass().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MIPlatformPassPropertyType }
     * 
     * 
     */
    public List<MIPlatformPassPropertyType> getPass() {
        if (pass == null) {
            pass = new ArrayList<MIPlatformPassPropertyType>();
        }
        return this.pass;
    }

    /**
     * Gets the value of the objectiveOccurance property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the objectiveOccurance property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getObjectiveOccurance().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MIEventPropertyType }
     * 
     * 
     */
    public List<MIEventPropertyType> getObjectiveOccurance() {
        if (objectiveOccurance == null) {
            objectiveOccurance = new ArrayList<MIEventPropertyType>();
        }
        return this.objectiveOccurance;
    }

}
