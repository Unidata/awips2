/**
 * This software was developed and / or modified by Raytheon Company,
 * pursuant to Contract DG133W-05-CQ-1067 with the US Government.
 * 
 * U.S. EXPORT CONTROLLED TECHNICAL DATA
 * This software product contains export-restricted data whose
 * export/transfer/disclosure is restricted by U.S. law. Dissemination
 * to non-U.S. persons whether in the United States or abroad requires
 * an export license or other authorization.
 * 
 * Contractor Name:        Raytheon Company
 * Contractor Address:     6825 Pine Street, Suite 340
 *                         Mail Stop B8
 *                         Omaha, NE 68106
 *                         402.291.0100
 * 
 * See the AWIPS II Master Rights File ("Master Rights File.pdf") for
 * further licensing information.
 **/
package com.raytheon.uf.common.dataplugin.shef.tables;

// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Embeddable;

import com.raytheon.uf.common.dataplugin.persist.PersistableDataObject;
import com.raytheon.uf.common.serialization.annotations.DynamicSerialize;
import com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement;

/**
 * RwbiasdynId generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * May 20, 2016       5576     bkowal  Cleanup.
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Embeddable
@DynamicSerialize
public class RwbiasdynId extends PersistableDataObject<RwbiasdynId> implements
        Serializable {

    private static final long serialVersionUID = 1L;

    @DynamicSerializeElement
    private String radid;

    @DynamicSerializeElement
    private String officeId;

    @DynamicSerializeElement
    private Date obstime;

    @DynamicSerializeElement
    private short memspanInd;

    public RwbiasdynId() {
    }

    public RwbiasdynId(String radid, String officeId, Date obstime,
            short memspanInd) {
        this.radid = radid;
        this.officeId = officeId;
        this.obstime = obstime;
        this.memspanInd = memspanInd;
    }

    @Column(name = "radid", nullable = false, length = 3)
    public String getRadid() {
        return this.radid;
    }

    public void setRadid(String radid) {
        this.radid = radid;
    }

    @Column(name = "office_id", nullable = false, length = 5)
    public String getOfficeId() {
        return this.officeId;
    }

    public void setOfficeId(String officeId) {
        this.officeId = officeId;
    }

    @Column(name = "obstime", nullable = false, length = 29)
    public Date getObstime() {
        return this.obstime;
    }

    public void setObstime(Date obstime) {
        this.obstime = obstime;
    }

    @Column(name = "memspan_ind", nullable = false)
    public short getMemspanInd() {
        return this.memspanInd;
    }

    public void setMemspanInd(short memspanInd) {
        this.memspanInd = memspanInd;
    }

    public boolean equals(Object other) {
        if ((this == other))
            return true;
        if ((other == null))
            return false;
        if (!(other instanceof RwbiasdynId))
            return false;
        RwbiasdynId castOther = (RwbiasdynId) other;

        return ((this.getRadid() == castOther.getRadid()) || (this.getRadid() != null
                && castOther.getRadid() != null && this.getRadid().equals(
                castOther.getRadid())))
                && ((this.getOfficeId() == castOther.getOfficeId()) || (this
                        .getOfficeId() != null
                        && castOther.getOfficeId() != null && this
                        .getOfficeId().equals(castOther.getOfficeId())))
                && ((this.getObstime() == castOther.getObstime()) || (this
                        .getObstime() != null && castOther.getObstime() != null && this
                        .getObstime().equals(castOther.getObstime())))
                && (this.getMemspanInd() == castOther.getMemspanInd());
    }

    public int hashCode() {
        int result = 17;

        result = 37 * result
                + (getRadid() == null ? 0 : this.getRadid().hashCode());
        result = 37 * result
                + (getOfficeId() == null ? 0 : this.getOfficeId().hashCode());
        result = 37 * result
                + (getObstime() == null ? 0 : this.getObstime().hashCode());
        result = 37 * result + this.getMemspanInd();
        return result;
    }

}
