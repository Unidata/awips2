/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * ColorvalueId generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Embeddable
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class ColorvalueId extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String userid;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String applicationName;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String colorUseName;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private int duration;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private double thresholdValue;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String thresholdUnit;

    public ColorvalueId() {
    }

    public ColorvalueId(String userid, String applicationName,
            String colorUseName, int duration, double thresholdValue,
            String thresholdUnit) {
        this.userid = userid;
        this.applicationName = applicationName;
        this.colorUseName = colorUseName;
        this.duration = duration;
        this.thresholdValue = thresholdValue;
        this.thresholdUnit = thresholdUnit;
    }

    @Column(name = "userid", nullable = false, length = 32)
    public String getUserid() {
        return this.userid;
    }

    public void setUserid(String userid) {
        this.userid = userid;
    }

    @Column(name = "application_name", nullable = false, length = 20)
    public String getApplicationName() {
        return this.applicationName;
    }

    public void setApplicationName(String applicationName) {
        this.applicationName = applicationName;
    }

    @Column(name = "color_use_name", nullable = false, length = 15)
    public String getColorUseName() {
        return this.colorUseName;
    }

    public void setColorUseName(String colorUseName) {
        this.colorUseName = colorUseName;
    }

    @Column(name = "duration", nullable = false)
    public int getDuration() {
        return this.duration;
    }

    public void setDuration(int duration) {
        this.duration = duration;
    }

    @Column(name = "threshold_value", nullable = false, precision = 17, scale = 17)
    public double getThresholdValue() {
        return this.thresholdValue;
    }

    public void setThresholdValue(double thresholdValue) {
        this.thresholdValue = thresholdValue;
    }

    @Column(name = "threshold_unit", nullable = false, length = 1)
    public String getThresholdUnit() {
        return this.thresholdUnit;
    }

    public void setThresholdUnit(String thresholdUnit) {
        this.thresholdUnit = thresholdUnit;
    }

    public boolean equals(Object other) {
        if ((this == other))
            return true;
        if ((other == null))
            return false;
        if (!(other instanceof ColorvalueId))
            return false;
        ColorvalueId castOther = (ColorvalueId) other;

        return ((this.getUserid() == castOther.getUserid()) || (this
                .getUserid() != null
                && castOther.getUserid() != null && this.getUserid().equals(
                castOther.getUserid())))
                && ((this.getApplicationName() == castOther
                        .getApplicationName()) || (this.getApplicationName() != null
                        && castOther.getApplicationName() != null && this
                        .getApplicationName().equals(
                                castOther.getApplicationName())))
                && ((this.getColorUseName() == castOther.getColorUseName()) || (this
                        .getColorUseName() != null
                        && castOther.getColorUseName() != null && this
                        .getColorUseName().equals(castOther.getColorUseName())))
                && (this.getDuration() == castOther.getDuration())
                && (this.getThresholdValue() == castOther.getThresholdValue())
                && ((this.getThresholdUnit() == castOther.getThresholdUnit()) || (this
                        .getThresholdUnit() != null
                        && castOther.getThresholdUnit() != null && this
                        .getThresholdUnit()
                        .equals(castOther.getThresholdUnit())));
    }

    public int hashCode() {
        int result = 17;

        result = 37 * result
                + (getUserid() == null ? 0 : this.getUserid().hashCode());
        result = 37
                * result
                + (getApplicationName() == null ? 0 : this.getApplicationName()
                        .hashCode());
        result = 37
                * result
                + (getColorUseName() == null ? 0 : this.getColorUseName()
                        .hashCode());
        result = 37 * result + this.getDuration();
        result = 37 * result + (int) this.getThresholdValue();
        result = 37
                * result
                + (getThresholdUnit() == null ? 0 : this.getThresholdUnit()
                        .hashCode());
        return result;
    }

}
