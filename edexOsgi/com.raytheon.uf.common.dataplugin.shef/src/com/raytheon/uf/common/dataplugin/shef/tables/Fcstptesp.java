/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Fcstptesp generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Entity
@Table(name = "fcstptesp")
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class Fcstptesp extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private FcstptespId id;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Frequencyupdate frequencyupdateByFrequpdDrought;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Fcstptservice fcstptservice;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Fcsthorizon fcsthorizon;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Location location;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Flowtype flowtype;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Fcsttype fcsttype;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Hydrologicmethod hydrologicmethod;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Snowmethod snowmethod;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Postprocessor postprocessor;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Frequencyupdate frequencyupdateByFrequpdFlood;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Frequencyupdate frequencyupdateByFrequpdNormal;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Reservoirmodel reservoirmodel;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Routingmethod routingmethod;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Short nummonclim;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Short numdayhyd;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Short numElevZones;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String consumptiveUse;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String channelLoss;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Date implDate;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Date externalDate;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Date webDate;

    public Fcstptesp() {
    }

    public Fcstptesp(FcstptespId id, Fcstptservice fcstptservice,
            Location location, Flowtype flowtype, Fcsttype fcsttype,
            Hydrologicmethod hydrologicmethod, Snowmethod snowmethod,
            Reservoirmodel reservoirmodel, Routingmethod routingmethod) {
        this.id = id;
        this.fcstptservice = fcstptservice;
        this.location = location;
        this.flowtype = flowtype;
        this.fcsttype = fcsttype;
        this.hydrologicmethod = hydrologicmethod;
        this.snowmethod = snowmethod;
        this.reservoirmodel = reservoirmodel;
        this.routingmethod = routingmethod;
    }

    public Fcstptesp(FcstptespId id,
            Frequencyupdate frequencyupdateByFrequpdDrought,
            Fcstptservice fcstptservice, Fcsthorizon fcsthorizon,
            Location location, Flowtype flowtype, Fcsttype fcsttype,
            Hydrologicmethod hydrologicmethod, Snowmethod snowmethod,
            Postprocessor postprocessor,
            Frequencyupdate frequencyupdateByFrequpdFlood,
            Frequencyupdate frequencyupdateByFrequpdNormal,
            Reservoirmodel reservoirmodel, Routingmethod routingmethod,
            Short nummonclim, Short numdayhyd, Short numElevZones,
            String consumptiveUse, String channelLoss, Date implDate,
            Date externalDate, Date webDate) {
        this.id = id;
        this.frequencyupdateByFrequpdDrought = frequencyupdateByFrequpdDrought;
        this.fcstptservice = fcstptservice;
        this.fcsthorizon = fcsthorizon;
        this.location = location;
        this.flowtype = flowtype;
        this.fcsttype = fcsttype;
        this.hydrologicmethod = hydrologicmethod;
        this.snowmethod = snowmethod;
        this.postprocessor = postprocessor;
        this.frequencyupdateByFrequpdFlood = frequencyupdateByFrequpdFlood;
        this.frequencyupdateByFrequpdNormal = frequencyupdateByFrequpdNormal;
        this.reservoirmodel = reservoirmodel;
        this.routingmethod = routingmethod;
        this.nummonclim = nummonclim;
        this.numdayhyd = numdayhyd;
        this.numElevZones = numElevZones;
        this.consumptiveUse = consumptiveUse;
        this.channelLoss = channelLoss;
        this.implDate = implDate;
        this.externalDate = externalDate;
        this.webDate = webDate;
    }

    @EmbeddedId
    @AttributeOverrides( {
            @AttributeOverride(name = "lid", column = @Column(name = "lid", nullable = false, length = 8)),
            @AttributeOverride(name = "snowMethod", column = @Column(name = "snow_method", nullable = false, length = 30)),
            @AttributeOverride(name = "hydrolMethod", column = @Column(name = "hydrol_method", nullable = false, length = 30)),
            @AttributeOverride(name = "reservoirModel", column = @Column(name = "reservoir_model", nullable = false, length = 30)),
            @AttributeOverride(name = "upstreamSeg", column = @Column(name = "upstream_seg", nullable = false, length = 8)),
            @AttributeOverride(name = "hydraulMethod", column = @Column(name = "hydraul_method", nullable = false, length = 30)),
            @AttributeOverride(name = "flowtype", column = @Column(name = "flowtype", nullable = false, length = 40)),
            @AttributeOverride(name = "fcsttype", column = @Column(name = "fcsttype", nullable = false, length = 20)) })
    public FcstptespId getId() {
        return this.id;
    }

    public void setId(FcstptespId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "frequpd_drought")
    public Frequencyupdate getFrequencyupdateByFrequpdDrought() {
        return this.frequencyupdateByFrequpdDrought;
    }

    public void setFrequencyupdateByFrequpdDrought(
            Frequencyupdate frequencyupdateByFrequpdDrought) {
        this.frequencyupdateByFrequpdDrought = frequencyupdateByFrequpdDrought;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "lid", nullable = false, insertable = false, updatable = false)
    public Fcstptservice getFcstptservice() {
        return this.fcstptservice;
    }

    public void setFcstptservice(Fcstptservice fcstptservice) {
        this.fcstptservice = fcstptservice;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "fcst_horizon")
    public Fcsthorizon getFcsthorizon() {
        return this.fcsthorizon;
    }

    public void setFcsthorizon(Fcsthorizon fcsthorizon) {
        this.fcsthorizon = fcsthorizon;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "upstream_seg", nullable = false, insertable = false, updatable = false)
    public Location getLocation() {
        return this.location;
    }

    public void setLocation(Location location) {
        this.location = location;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "flowtype", nullable = false, insertable = false, updatable = false)
    public Flowtype getFlowtype() {
        return this.flowtype;
    }

    public void setFlowtype(Flowtype flowtype) {
        this.flowtype = flowtype;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "fcsttype", nullable = false, insertable = false, updatable = false)
    public Fcsttype getFcsttype() {
        return this.fcsttype;
    }

    public void setFcsttype(Fcsttype fcsttype) {
        this.fcsttype = fcsttype;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "hydrol_method", nullable = false, insertable = false, updatable = false)
    public Hydrologicmethod getHydrologicmethod() {
        return this.hydrologicmethod;
    }

    public void setHydrologicmethod(Hydrologicmethod hydrologicmethod) {
        this.hydrologicmethod = hydrologicmethod;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "snow_method", nullable = false, insertable = false, updatable = false)
    public Snowmethod getSnowmethod() {
        return this.snowmethod;
    }

    public void setSnowmethod(Snowmethod snowmethod) {
        this.snowmethod = snowmethod;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "post_processor")
    public Postprocessor getPostprocessor() {
        return this.postprocessor;
    }

    public void setPostprocessor(Postprocessor postprocessor) {
        this.postprocessor = postprocessor;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "frequpd_flood")
    public Frequencyupdate getFrequencyupdateByFrequpdFlood() {
        return this.frequencyupdateByFrequpdFlood;
    }

    public void setFrequencyupdateByFrequpdFlood(
            Frequencyupdate frequencyupdateByFrequpdFlood) {
        this.frequencyupdateByFrequpdFlood = frequencyupdateByFrequpdFlood;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "frequpd_normal")
    public Frequencyupdate getFrequencyupdateByFrequpdNormal() {
        return this.frequencyupdateByFrequpdNormal;
    }

    public void setFrequencyupdateByFrequpdNormal(
            Frequencyupdate frequencyupdateByFrequpdNormal) {
        this.frequencyupdateByFrequpdNormal = frequencyupdateByFrequpdNormal;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "reservoir_model", nullable = false, insertable = false, updatable = false)
    public Reservoirmodel getReservoirmodel() {
        return this.reservoirmodel;
    }

    public void setReservoirmodel(Reservoirmodel reservoirmodel) {
        this.reservoirmodel = reservoirmodel;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "hydraul_method", nullable = false, insertable = false, updatable = false)
    public Routingmethod getRoutingmethod() {
        return this.routingmethod;
    }

    public void setRoutingmethod(Routingmethod routingmethod) {
        this.routingmethod = routingmethod;
    }

    @Column(name = "nummonclim")
    public Short getNummonclim() {
        return this.nummonclim;
    }

    public void setNummonclim(Short nummonclim) {
        this.nummonclim = nummonclim;
    }

    @Column(name = "numdayhyd")
    public Short getNumdayhyd() {
        return this.numdayhyd;
    }

    public void setNumdayhyd(Short numdayhyd) {
        this.numdayhyd = numdayhyd;
    }

    @Column(name = "num_elev_zones")
    public Short getNumElevZones() {
        return this.numElevZones;
    }

    public void setNumElevZones(Short numElevZones) {
        this.numElevZones = numElevZones;
    }

    @Column(name = "consumptive_use", length = 1)
    public String getConsumptiveUse() {
        return this.consumptiveUse;
    }

    public void setConsumptiveUse(String consumptiveUse) {
        this.consumptiveUse = consumptiveUse;
    }

    @Column(name = "channel_loss", length = 1)
    public String getChannelLoss() {
        return this.channelLoss;
    }

    public void setChannelLoss(String channelLoss) {
        this.channelLoss = channelLoss;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "impl_date", length = 13)
    public Date getImplDate() {
        return this.implDate;
    }

    public void setImplDate(Date implDate) {
        this.implDate = implDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "external_date", length = 13)
    public Date getExternalDate() {
        return this.externalDate;
    }

    public void setExternalDate(Date externalDate) {
        this.externalDate = externalDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "web_date", length = 13)
    public Date getWebDate() {
        return this.webDate;
    }

    public void setWebDate(Date webDate) {
        this.webDate = webDate;
    }

}
