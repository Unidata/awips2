/**
 * This software was developed and / or modified by Raytheon Company,
 * pursuant to Contract DG133W-05-CQ-1067 with the US Government.
 *
 * U.S. EXPORT CONTROLLED TECHNICAL DATA
 * This software product contains export-restricted data whose
 * export/transfer/disclosure is restricted by U.S. law. Dissemination
 * to non-U.S. persons whether in the United States or abroad requires
 * an export license or other authorization.
 *
 * Contractor Name:        Raytheon Company
 * Contractor Address:     6825 Pine Street, Suite 340
 *                         Mail Stop B8
 *                         Omaha, NE 68106
 *                         402.291.0100
 *
 * See the AWIPS II Master Rights File ("Master Rights File.pdf") for
 * further licensing information.
 **/
package com.raytheon.uf.common.dataplugin.shef.tables;

// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.raytheon.uf.common.dataplugin.persist.PersistableDataObject;
import com.raytheon.uf.common.serialization.annotations.DynamicSerialize;
import com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement;

/**
 * Radarloc generated by hbm2java
 *
 *
 * <pre>
 *
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011  10672     jkorman     Move refactor to new project
 * Oct 07, 2013   2361     njensen     Removed XML annotations
 * May 20, 2016   5576     bkowal      Cleanup.
 * Jun 30, 2016   4625     bkowal      Added {@link #SELECT_WHERE_USE_RADAR}.
 * Jul 30, 2016   4622     jschmid     Added {@link #SELECT_USE_RADAR_ON_ID}.
 * Sep 14, 2016   4622     jschmid     Added toString() method
 * Nov 02, 2016   4622     skorolev    Cleanup toString().
 * Dec 15, 2016   4622     bkowal      Added {@link #SELECT_REC_EXCLUDE_LINKS}.
 * Apr 11, 2019   7765     rjpeter     Removed bidirectional mapping.
 *
 * </pre>
 *
 * @author jkorman
 */
@NamedQueries({
        @NamedQuery(name = Radarloc.SELECT_NUM_AND_OFFICE_BY_ID, query = Radarloc.SELECT_NUM_AND_OFFICE_BY_ID_HQL),
        @NamedQuery(name = Radarloc.SELECT_WHERE_USE_RADAR, query = Radarloc.SELECT_WHERE_USE_RADAR_HQL),
        @NamedQuery(name = Radarloc.SELECT_USE_RADAR_ON_ID, query = Radarloc.SELECT_USE_RADAR_ON_ID_HQL),
        @NamedQuery(name = Radarloc.SELECT_REC_EXCLUDE_LINKS, query = Radarloc.SELECT_REC_EXCLUDE_LINKS_HQL) })
@Entity
@Table(name = "radarloc")
@DynamicSerialize
public class Radarloc extends PersistableDataObject<String>
        implements Serializable {

    public static final String SELECT_NUM_AND_OFFICE_BY_ID = "SELECT_NUM_AND_OFFICE_BY_ID";

    protected static final String SELECT_NUM_AND_OFFICE_BY_ID_HQL = "select radid, radarNum, officeId from Radarloc Rec where Rec.radid in :radids";

    public static final String SELECT_WHERE_USE_RADAR = "selectWhereUseRadar";

    protected static final String SELECT_WHERE_USE_RADAR_HQL = "from Radarloc Rec where Rec.useRadar = 'T'";

    public static final String SELECT_USE_RADAR_ON_ID = "SELECT_USE_RADAR_ON_ID";

    protected static final String SELECT_USE_RADAR_ON_ID_HQL = "select Rec.useRadar from Radarloc Rec where Rec.radid in :radids";

    public static final String SELECT_REC_EXCLUDE_LINKS = "selectRecExcludeLinks";

    protected static final String SELECT_REC_EXCLUDE_LINKS_HQL = "SELECT radid, name, radidPrefix, radarNum, state, lat, lon, elev, towerHt, useRadar, officeId from Radarloc Rec WHERE Rec.radid = :radid";

    private static final long serialVersionUID = 1L;

    @DynamicSerializeElement
    private String radid;

    @DynamicSerializeElement
    private String name;

    @DynamicSerializeElement
    private String radidPrefix;

    @DynamicSerializeElement
    private Short radarNum;

    @DynamicSerializeElement
    private String state;

    @DynamicSerializeElement
    private Double lat;

    @DynamicSerializeElement
    private Double lon;

    @DynamicSerializeElement
    private Double elev;

    @DynamicSerializeElement
    private Double towerHt;

    @DynamicSerializeElement
    private String useRadar;

    @DynamicSerializeElement
    private String officeId;

    public Radarloc() {
    }

    public Radarloc(String radid) {
        this.radid = radid;
    }

    @Id
    @Column(name = "radid", unique = true, nullable = false, length = 3)
    public String getRadid() {
        return this.radid;
    }

    public void setRadid(String radid) {
        this.radid = radid;
    }

    @Column(name = "name", length = 20)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "radid_prefix", length = 1)
    public String getRadidPrefix() {
        return this.radidPrefix;
    }

    public void setRadidPrefix(String radidPrefix) {
        this.radidPrefix = radidPrefix;
    }

    @Column(name = "radar_num")
    public Short getRadarNum() {
        return this.radarNum;
    }

    public void setRadarNum(Short radarNum) {
        this.radarNum = radarNum;
    }

    @Column(name = "state", length = 2)
    public String getState() {
        return this.state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @Column(name = "lat", precision = 17, scale = 17)
    public Double getLat() {
        return this.lat;
    }

    public void setLat(Double lat) {
        this.lat = lat;
    }

    @Column(name = "lon", precision = 17, scale = 17)
    public Double getLon() {
        return this.lon;
    }

    public void setLon(Double lon) {
        this.lon = lon;
    }

    @Column(name = "elev", precision = 17, scale = 17)
    public Double getElev() {
        return this.elev;
    }

    public void setElev(Double elev) {
        this.elev = elev;
    }

    @Column(name = "tower_ht", precision = 17, scale = 17)
    public Double getTowerHt() {
        return this.towerHt;
    }

    public void setTowerHt(Double towerHt) {
        this.towerHt = towerHt;
    }

    @Column(name = "use_radar", length = 1)
    public String getUseRadar() {
        return this.useRadar;
    }

    public void setUseRadar(String useRadar) {
        this.useRadar = useRadar;
    }

    @Column(name = "office_id", length = 5)
    public String getOfficeId() {
        return this.officeId;
    }

    public void setOfficeId(String officeId) {
        this.officeId = officeId;
    }

    @Override
    public String toString() {

        StringBuilder record = new StringBuilder();
        record.append("Radarloc: {RadarID: ").append(radid);
        record.append(", Use Radar: ").append(useRadar).append("}");
        return record.toString();
    }
}