/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Floodcat generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Entity
@Table(name = "floodcat")
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class Floodcat extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String lid;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Riverstat riverstat;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double minorStage;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double moderateStage;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double majorStage;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double minorFlow;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double moderateFlow;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double majorFlow;

    public Floodcat() {
    }

    public Floodcat(String lid, Riverstat riverstat) {
        this.lid = lid;
        this.riverstat = riverstat;
    }

    public Floodcat(String lid, Riverstat riverstat, Double minorStage,
            Double moderateStage, Double majorStage, Double minorFlow,
            Double moderateFlow, Double majorFlow) {
        this.lid = lid;
        this.riverstat = riverstat;
        this.minorStage = minorStage;
        this.moderateStage = moderateStage;
        this.majorStage = majorStage;
        this.minorFlow = minorFlow;
        this.moderateFlow = moderateFlow;
        this.majorFlow = majorFlow;
    }

    @Id
    @Column(name = "lid", unique = true, nullable = false, length = 8)
    public String getLid() {
        return this.lid;
    }

    public void setLid(String lid) {
        this.lid = lid;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "lid", unique = true, nullable = false, insertable = false, updatable = false)
    public Riverstat getRiverstat() {
        return this.riverstat;
    }

    public void setRiverstat(Riverstat riverstat) {
        this.riverstat = riverstat;
    }

    @Column(name = "minor_stage", precision = 17, scale = 17)
    public Double getMinorStage() {
        return this.minorStage;
    }

    public void setMinorStage(Double minorStage) {
        this.minorStage = minorStage;
    }

    @Column(name = "moderate_stage", precision = 17, scale = 17)
    public Double getModerateStage() {
        return this.moderateStage;
    }

    public void setModerateStage(Double moderateStage) {
        this.moderateStage = moderateStage;
    }

    @Column(name = "major_stage", precision = 17, scale = 17)
    public Double getMajorStage() {
        return this.majorStage;
    }

    public void setMajorStage(Double majorStage) {
        this.majorStage = majorStage;
    }

    @Column(name = "minor_flow", precision = 17, scale = 17)
    public Double getMinorFlow() {
        return this.minorFlow;
    }

    public void setMinorFlow(Double minorFlow) {
        this.minorFlow = minorFlow;
    }

    @Column(name = "moderate_flow", precision = 17, scale = 17)
    public Double getModerateFlow() {
        return this.moderateFlow;
    }

    public void setModerateFlow(Double moderateFlow) {
        this.moderateFlow = moderateFlow;
    }

    @Column(name = "major_flow", precision = 17, scale = 17)
    public Double getMajorFlow() {
        return this.majorFlow;
    }

    public void setMajorFlow(Double majorFlow) {
        this.majorFlow = majorFlow;
    }

}
