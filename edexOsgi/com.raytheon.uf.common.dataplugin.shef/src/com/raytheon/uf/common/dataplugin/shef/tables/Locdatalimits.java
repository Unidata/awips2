/**
 * This software was developed and / or modified by Raytheon Company,
 * pursuant to Contract DG133W-05-CQ-1067 with the US Government.
 * 
 * U.S. EXPORT CONTROLLED TECHNICAL DATA
 * This software product contains export-restricted data whose
 * export/transfer/disclosure is restricted by U.S. law. Dissemination
 * to non-U.S. persons whether in the United States or abroad requires
 * an export license or other authorization.
 * 
 * Contractor Name:        Raytheon Company
 * Contractor Address:     6825 Pine Street, Suite 340
 *                         Mail Stop B8
 *                         Omaha, NE 68106
 *                         402.291.0100
 * 
 * See the AWIPS II Master Rights File ("Master Rights File.pdf") for
 * further licensing information.
 **/
package com.raytheon.uf.common.dataplugin.shef.tables;

// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import java.io.Serializable;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.raytheon.uf.common.dataplugin.persist.PersistableDataObject;
import com.raytheon.uf.common.serialization.annotations.DynamicSerialize;
import com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement;

/**
 * Locdatalimits generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011 10672      jkorman     Move refactor to new project
 * Oct 07, 2013 2361       njensen     Removed XML annotations
 * May 23, 2016 5590       bkowal      Cleanup.
 * Jun 24, 2016 5699       bkowal      Added {@link #SELECT_ALL_LOCDATALIMITS_RECORDS}.
 * Sep 13, 2016 5631       bkowal      Added {@link #SELECT_MAX_LOCDATALIMITS_PRECIP}.
 * Nov 10, 2016 5999       bkowal      Added {@link #SELECT_OBS_LIMITS_FROM_LOCDATALIMITS}.
 * Apr 18, 2018 DCS19644   jwu         Add column 'ts' (Type-Source) & updated queries.
 * 
 * </pre>
 * 
 * @author jkorman
 */
@NamedQueries({
        @NamedQuery(name = Locdatalimits.SELECT_ALL_LOCDATALIMITS_RECORDS, query = Locdatalimits.SELECT_ALL_LOCDATALIMITS_RECORDS_HQL),
        @NamedQuery(name = Locdatalimits.SELECT_PE_AND_DUR_LOCDATALIMITS_RECORDS, query = Locdatalimits.SELECT_PE_AND_DUR_LOCDATALIMITS_RECORDS_HQL),
        @NamedQuery(name = Locdatalimits.SELECT_PE_LOCDATALIMITS_RECORDS, query = Locdatalimits.SELECT_PE_LOCDATALIMITS_RECORDS_HQL),
        @NamedQuery(name = Locdatalimits.SELECT_OBS_LIMITS_FROM_LOCDATALIMITS, query = Locdatalimits.SELECT_OBS_LIMITS_FROM_LOCDATALIMITS_HQL),
        @NamedQuery(name = Locdatalimits.SELECT_MAX_LOCDATALIMITS_PRECIP, query = Locdatalimits.SELECT_MAX_LOCDATALIMITS_PRECIP_HQL),
        @NamedQuery(name = Locdatalimits.SELECT_PP_WITH_DUR_1006_2001_5004_LIMITS_FROM_LOCDATALIMITS, query = Locdatalimits.SELECT_PP_WITH_DUR_1006_2001_5004_LIMITS_FROM_LOCDATALIMITS_HQL),
        @NamedQuery(name = Locdatalimits.SELECT_TA_LIMITS_FROM_LOCDATALIMITS, query = Locdatalimits.SELECT_TA_LIMITS_FROM_LOCDATALIMITS_HQL) })
@Entity
@Table(name = "locdatalimits")
@DynamicSerialize
public class Locdatalimits extends PersistableDataObject<LocdatalimitsId>
        implements Serializable {

    /*
     * DCS 19644 - "ts" (Type-Source) is added as a new column after "dur" in
     * location data limit. It only applies to gross/reasonable range QC checks
     * and the upper/lower limit alert/alarm checks in PostShef. It should not
     * be applied to anything else. So the queries listed below will only
     * include entries for "ts" is "NA" (default).
     */
    public static final String SELECT_ALL_LOCDATALIMITS_RECORDS = "selectAllLocDataLimitsRecords";

    protected static final String SELECT_ALL_LOCDATALIMITS_RECORDS_HQL = "FROM Locdatalimits ldl";

    public static final String SELECT_PE_AND_DUR_LOCDATALIMITS_RECORDS = "selectPeAndDurFromLocdatalimitsRecords";

    public static final String SELECT_PE_AND_DUR_LOCDATALIMITS_RECORDS_HQL = "FROM Locdatalimits ldl WHERE ldl.id.pe = 'PP' AND ldl.id.dur IN (1006, 2001, 5004) ORDER BY monthdaystart ASC, dur ASC";

    public static final String SELECT_PE_LOCDATALIMITS_RECORDS = "selectPeFromLocdatalimitsRecords";

    protected static final String SELECT_PE_LOCDATALIMITS_RECORDS_HQL = "FROM Locdatalimits ldl WHERE ldl.id.pe = 'TA' AND ldl.id.ts = 'NA' ORDER BY monthdaystart ASC, dur ASC";

    public static final String SELECT_MAX_LOCDATALIMITS_PRECIP = "selectMaxLocdatalimitsPrecip";

    public static final String SELECT_OBS_LIMITS_FROM_LOCDATALIMITS = "selectObsLimitsFromLocDataLimits";

    protected static final String SELECT_MAX_LOCDATALIMITS_PRECIP_HQL = "FROM Locdatalimits ldl WHERE ldl.id.pe = 'PP' AND ldl.id.ts = 'NA' AND ldl.id.dur = 1001 AND ldl.id.lid = :lid ORDER BY monthdaystart";

    protected static final String SELECT_OBS_LIMITS_FROM_LOCDATALIMITS_HQL = "SELECT id, monthdayend, rocMax, alarmRocLimit, alertRocLimit FROM Locdatalimits ldl WHERE ldl.id.ts = 'NA' ";

    public static final String SELECT_PP_WITH_DUR_1006_2001_5004_LIMITS_FROM_LOCDATALIMITS = "selectPPWithDur1006_2001_5004LimitsFromLocDataLimits";

    public static final String SELECT_PP_WITH_DUR_1006_2001_5004_LIMITS_FROM_LOCDATALIMITS_HQL = "SELECT id, monthdayend, grossRangeMax FROM Locdatalimits ldl WHERE ldl.id.pe = 'PP' AND ldl.id.dur IN (1006, 2001, 5004)";

    public static final String SELECT_TA_LIMITS_FROM_LOCDATALIMITS = "selectTALimitsFromLocDataLimits";

    public static final String SELECT_TA_LIMITS_FROM_LOCDATALIMITS_HQL = "SELECT id, monthdayend, grossRangeMin, grossRangeMax FROM Locdatalimits ldl WHERE ldl.id.pe = 'TA'";

    private static final long serialVersionUID = 1L;

    @DynamicSerializeElement
    private LocdatalimitsId id;

    @DynamicSerializeElement
    private Shefpe shefpe;

    @DynamicSerializeElement
    private Shefdur shefdur;

    @DynamicSerializeElement
    private Shefts shefts;

    @DynamicSerializeElement
    private String monthdayend;

    @DynamicSerializeElement
    private Double grossRangeMin;

    @DynamicSerializeElement
    private Double grossRangeMax;

    @DynamicSerializeElement
    private Double reasonRangeMin;

    @DynamicSerializeElement
    private Double reasonRangeMax;

    @DynamicSerializeElement
    private Double rocMax;

    @DynamicSerializeElement
    private Double alertUpperLimit;

    @DynamicSerializeElement
    private Double alertRocLimit;

    @DynamicSerializeElement
    private Double alarmUpperLimit;

    @DynamicSerializeElement
    private Double alarmRocLimit;

    @DynamicSerializeElement
    private Double alertLowerLimit;

    @DynamicSerializeElement
    private Double alarmLowerLimit;

    @DynamicSerializeElement
    private Double alertDiffLimit;

    @DynamicSerializeElement
    private Double alarmDiffLimit;

    public Locdatalimits() {
    }

    public Locdatalimits(LocdatalimitsId id, Shefpe shefpe, Shefdur shefdur,
            Shefts shefts,
            String monthdayend) {
        this.id = id;
        this.shefpe = shefpe;
        this.shefdur = shefdur;
        this.shefts = shefts;
        this.monthdayend = monthdayend;
    }

    public Locdatalimits(LocdatalimitsId id, Shefpe shefpe, Shefdur shefdur,
            Shefts shefts,
            String monthdayend, Double grossRangeMin, Double grossRangeMax,
            Double reasonRangeMin, Double reasonRangeMax, Double rocMax,
            Double alertUpperLimit, Double alertRocLimit,
            Double alarmUpperLimit, Double alarmRocLimit,
            Double alertLowerLimit, Double alarmLowerLimit,
            Double alertDiffLimit, Double alarmDiffLimit) {
        this.id = id;
        this.shefpe = shefpe;
        this.shefdur = shefdur;
        this.shefts = shefts;
        this.monthdayend = monthdayend;
        this.grossRangeMin = grossRangeMin;
        this.grossRangeMax = grossRangeMax;
        this.reasonRangeMin = reasonRangeMin;
        this.reasonRangeMax = reasonRangeMax;
        this.rocMax = rocMax;
        this.alertUpperLimit = alertUpperLimit;
        this.alertRocLimit = alertRocLimit;
        this.alarmUpperLimit = alarmUpperLimit;
        this.alarmRocLimit = alarmRocLimit;
        this.alertLowerLimit = alertLowerLimit;
        this.alarmLowerLimit = alarmLowerLimit;
        this.alertDiffLimit = alertDiffLimit;
        this.alarmDiffLimit = alarmDiffLimit;
    }

    @EmbeddedId
    @AttributeOverrides({
            @AttributeOverride(name = "lid", column = @Column(name = "lid", nullable = false, length = 8)),
            @AttributeOverride(name = "pe", column = @Column(name = "pe", nullable = false, length = 2)),
            @AttributeOverride(name = "dur", column = @Column(name = "dur", nullable = false)),
            @AttributeOverride(name = "ts", column = @Column(name = "ts", nullable = false, length = 2)),
            @AttributeOverride(name = "monthdaystart", column = @Column(name = "monthdaystart", nullable = false, length = 5)) })
    public LocdatalimitsId getId() {
        return this.id;
    }

    public void setId(LocdatalimitsId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "pe", nullable = false, insertable = false, updatable = false)
    public Shefpe getShefpe() {
        return this.shefpe;
    }

    public void setShefpe(Shefpe shefpe) {
        this.shefpe = shefpe;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "dur", nullable = false, insertable = false, updatable = false)
    public Shefdur getShefdur() {
        return this.shefdur;
    }

    public void setShefdur(Shefdur shefdur) {
        this.shefdur = shefdur;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "ts", nullable = false, insertable = false, updatable = false)
    public Shefts getShefts() {
        return this.shefts;
    }

    public void setShefts(Shefts shefts) {
        this.shefts = shefts;
    }

    @Column(name = "monthdayend", nullable = false, length = 5)
    public String getMonthdayend() {
        return this.monthdayend;
    }

    public void setMonthdayend(String monthdayend) {
        this.monthdayend = monthdayend;
    }

    @Column(name = "gross_range_min", precision = 17, scale = 17)
    public Double getGrossRangeMin() {
        return this.grossRangeMin;
    }

    public void setGrossRangeMin(Double grossRangeMin) {
        this.grossRangeMin = grossRangeMin;
    }

    @Column(name = "gross_range_max", precision = 17, scale = 17)
    public Double getGrossRangeMax() {
        return this.grossRangeMax;
    }

    public void setGrossRangeMax(Double grossRangeMax) {
        this.grossRangeMax = grossRangeMax;
    }

    @Column(name = "reason_range_min", precision = 17, scale = 17)
    public Double getReasonRangeMin() {
        return this.reasonRangeMin;
    }

    public void setReasonRangeMin(Double reasonRangeMin) {
        this.reasonRangeMin = reasonRangeMin;
    }

    @Column(name = "reason_range_max", precision = 17, scale = 17)
    public Double getReasonRangeMax() {
        return this.reasonRangeMax;
    }

    public void setReasonRangeMax(Double reasonRangeMax) {
        this.reasonRangeMax = reasonRangeMax;
    }

    @Column(name = "roc_max", precision = 17, scale = 17)
    public Double getRocMax() {
        return this.rocMax;
    }

    public void setRocMax(Double rocMax) {
        this.rocMax = rocMax;
    }

    @Column(name = "alert_upper_limit", precision = 17, scale = 17)
    public Double getAlertUpperLimit() {
        return this.alertUpperLimit;
    }

    public void setAlertUpperLimit(Double alertUpperLimit) {
        this.alertUpperLimit = alertUpperLimit;
    }

    @Column(name = "alert_roc_limit", precision = 17, scale = 17)
    public Double getAlertRocLimit() {
        return this.alertRocLimit;
    }

    public void setAlertRocLimit(Double alertRocLimit) {
        this.alertRocLimit = alertRocLimit;
    }

    @Column(name = "alarm_upper_limit", precision = 17, scale = 17)
    public Double getAlarmUpperLimit() {
        return this.alarmUpperLimit;
    }

    public void setAlarmUpperLimit(Double alarmUpperLimit) {
        this.alarmUpperLimit = alarmUpperLimit;
    }

    @Column(name = "alarm_roc_limit", precision = 17, scale = 17)
    public Double getAlarmRocLimit() {
        return this.alarmRocLimit;
    }

    public void setAlarmRocLimit(Double alarmRocLimit) {
        this.alarmRocLimit = alarmRocLimit;
    }

    @Column(name = "alert_lower_limit", precision = 17, scale = 17)
    public Double getAlertLowerLimit() {
        return this.alertLowerLimit;
    }

    public void setAlertLowerLimit(Double alertLowerLimit) {
        this.alertLowerLimit = alertLowerLimit;
    }

    @Column(name = "alarm_lower_limit", precision = 17, scale = 17)
    public Double getAlarmLowerLimit() {
        return this.alarmLowerLimit;
    }

    public void setAlarmLowerLimit(Double alarmLowerLimit) {
        this.alarmLowerLimit = alarmLowerLimit;
    }

    @Column(name = "alert_diff_limit", precision = 17, scale = 17)
    public Double getAlertDiffLimit() {
        return this.alertDiffLimit;
    }

    public void setAlertDiffLimit(Double alertDiffLimit) {
        this.alertDiffLimit = alertDiffLimit;
    }

    @Column(name = "alarm_diff_limit", precision = 17, scale = 17)
    public Double getAlarmDiffLimit() {
        return this.alarmDiffLimit;
    }

    public void setAlarmDiffLimit(Double alarmDiffLimit) {
        this.alarmDiffLimit = alarmDiffLimit;
    }

}