/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * SacsmaparamsId generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Embeddable
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class SacsmaparamsId extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String basinId;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String source;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Date validtime;

    public SacsmaparamsId() {
    }

    public SacsmaparamsId(String basinId, String source, Date validtime) {
        this.basinId = basinId;
        this.source = source;
        this.validtime = validtime;
    }

    @Column(name = "basin_id", nullable = false, length = 8)
    public String getBasinId() {
        return this.basinId;
    }

    public void setBasinId(String basinId) {
        this.basinId = basinId;
    }

    @Column(name = "source", nullable = false, length = 20)
    public String getSource() {
        return this.source;
    }

    public void setSource(String source) {
        this.source = source;
    }

    @Column(name = "validtime", nullable = false, length = 29)
    public Date getValidtime() {
        return this.validtime;
    }

    public void setValidtime(Date validtime) {
        this.validtime = validtime;
    }

    public boolean equals(Object other) {
        if ((this == other))
            return true;
        if ((other == null))
            return false;
        if (!(other instanceof SacsmaparamsId))
            return false;
        SacsmaparamsId castOther = (SacsmaparamsId) other;

        return ((this.getBasinId() == castOther.getBasinId()) || (this
                .getBasinId() != null
                && castOther.getBasinId() != null && this.getBasinId().equals(
                castOther.getBasinId())))
                && ((this.getSource() == castOther.getSource()) || (this
                        .getSource() != null
                        && castOther.getSource() != null && this.getSource()
                        .equals(castOther.getSource())))
                && ((this.getValidtime() == castOther.getValidtime()) || (this
                        .getValidtime() != null
                        && castOther.getValidtime() != null && this
                        .getValidtime().equals(castOther.getValidtime())));
    }

    public int hashCode() {
        int result = 17;

        result = 37 * result
                + (getBasinId() == null ? 0 : this.getBasinId().hashCode());
        result = 37 * result
                + (getSource() == null ? 0 : this.getSource().hashCode());
        result = 37 * result
                + (getValidtime() == null ? 0 : this.getValidtime().hashCode());
        return result;
    }

}
