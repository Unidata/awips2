/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * RpfparamsId generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Embeddable
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class RpfparamsId extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private int obshrs;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private int fcsthrs;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String missval;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String misscat;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String misstim;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private int rvsexphrs;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private int flsexphrs;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private int flwexphrs;

    public RpfparamsId() {
    }

    public RpfparamsId(int obshrs, int fcsthrs, int rvsexphrs, int flsexphrs,
            int flwexphrs) {
        this.obshrs = obshrs;
        this.fcsthrs = fcsthrs;
        this.rvsexphrs = rvsexphrs;
        this.flsexphrs = flsexphrs;
        this.flwexphrs = flwexphrs;
    }

    public RpfparamsId(int obshrs, int fcsthrs, String missval, String misscat,
            String misstim, int rvsexphrs, int flsexphrs, int flwexphrs) {
        this.obshrs = obshrs;
        this.fcsthrs = fcsthrs;
        this.missval = missval;
        this.misscat = misscat;
        this.misstim = misstim;
        this.rvsexphrs = rvsexphrs;
        this.flsexphrs = flsexphrs;
        this.flwexphrs = flwexphrs;
    }

    @Column(name = "obshrs", nullable = false)
    public int getObshrs() {
        return this.obshrs;
    }

    public void setObshrs(int obshrs) {
        this.obshrs = obshrs;
    }

    @Column(name = "fcsthrs", nullable = false)
    public int getFcsthrs() {
        return this.fcsthrs;
    }

    public void setFcsthrs(int fcsthrs) {
        this.fcsthrs = fcsthrs;
    }

    @Column(name = "missval", length = 12)
    public String getMissval() {
        return this.missval;
    }

    public void setMissval(String missval) {
        this.missval = missval;
    }

    @Column(name = "misscat", length = 12)
    public String getMisscat() {
        return this.misscat;
    }

    public void setMisscat(String misscat) {
        this.misscat = misscat;
    }

    @Column(name = "misstim", length = 12)
    public String getMisstim() {
        return this.misstim;
    }

    public void setMisstim(String misstim) {
        this.misstim = misstim;
    }

    @Column(name = "rvsexphrs", nullable = false)
    public int getRvsexphrs() {
        return this.rvsexphrs;
    }

    public void setRvsexphrs(int rvsexphrs) {
        this.rvsexphrs = rvsexphrs;
    }

    @Column(name = "flsexphrs", nullable = false)
    public int getFlsexphrs() {
        return this.flsexphrs;
    }

    public void setFlsexphrs(int flsexphrs) {
        this.flsexphrs = flsexphrs;
    }

    @Column(name = "flwexphrs", nullable = false)
    public int getFlwexphrs() {
        return this.flwexphrs;
    }

    public void setFlwexphrs(int flwexphrs) {
        this.flwexphrs = flwexphrs;
    }

    public boolean equals(Object other) {
        if ((this == other))
            return true;
        if ((other == null))
            return false;
        if (!(other instanceof RpfparamsId))
            return false;
        RpfparamsId castOther = (RpfparamsId) other;

        return (this.getObshrs() == castOther.getObshrs())
                && (this.getFcsthrs() == castOther.getFcsthrs())
                && ((this.getMissval() == castOther.getMissval()) || (this
                        .getMissval() != null
                        && castOther.getMissval() != null && this.getMissval()
                        .equals(castOther.getMissval())))
                && ((this.getMisscat() == castOther.getMisscat()) || (this
                        .getMisscat() != null
                        && castOther.getMisscat() != null && this.getMisscat()
                        .equals(castOther.getMisscat())))
                && ((this.getMisstim() == castOther.getMisstim()) || (this
                        .getMisstim() != null
                        && castOther.getMisstim() != null && this.getMisstim()
                        .equals(castOther.getMisstim())))
                && (this.getRvsexphrs() == castOther.getRvsexphrs())
                && (this.getFlsexphrs() == castOther.getFlsexphrs())
                && (this.getFlwexphrs() == castOther.getFlwexphrs());
    }

    public int hashCode() {
        int result = 17;

        result = 37 * result + this.getObshrs();
        result = 37 * result + this.getFcsthrs();
        result = 37 * result
                + (getMissval() == null ? 0 : this.getMissval().hashCode());
        result = 37 * result
                + (getMisscat() == null ? 0 : this.getMisscat().hashCode());
        result = 37 * result
                + (getMisstim() == null ? 0 : this.getMisstim().hashCode());
        result = 37 * result + this.getRvsexphrs();
        result = 37 * result + this.getFlsexphrs();
        result = 37 * result + this.getFlwexphrs();
        return result;
    }

}
