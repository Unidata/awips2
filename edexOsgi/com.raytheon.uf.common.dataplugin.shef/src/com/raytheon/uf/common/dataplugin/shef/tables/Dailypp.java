/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.raytheon.uf.common.dataplugin.persist.PersistableDataObject;
import com.raytheon.uf.common.serialization.annotations.DynamicSerialize;
import com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement;

/**
 * Dailypp generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * Feb 12, 2018       7184     bkowal  Cleanup. Added named queries.
 * 
 * </pre>
 * 
 * @author jkorman
 */
@NamedQueries({
        @NamedQuery(name = Dailypp.SELECT_NON_MISSING_DATA_BETWEEN_OBS_TIME_RANGE, query = Dailypp.SELECT_NON_MISSING_DATA_BETWEEN_OBS_TIME_RANGE_HQL) })
@Entity
@Table(name = "dailypp")
@DynamicSerialize
public class Dailypp extends PersistableDataObject<DailyppId>
        implements Serializable {

    public static final String SELECT_NON_MISSING_DATA_BETWEEN_OBS_TIME_RANGE = "selectDailyPPNonMissingDataBetweenObsTimeRange";

    protected static final String SELECT_NON_MISSING_DATA_BETWEEN_OBS_TIME_RANGE_HQL = "FROM Dailypp d WHERE date_trunc('day', d.id.obstime) >= :startObsTime AND date_trunc('day', d.id.obstime) <= :endObsTime AND d.value IS NOT NULL AND d.value >= 0 ORDER BY d.id.lid, d.id.ts, d.id.obstime";

    private static final long serialVersionUID = 1L;

    @DynamicSerializeElement
    private DailyppId id;

    @DynamicSerializeElement
    private Double value;

    @DynamicSerializeElement
    private String qc;

    @DynamicSerializeElement
    private Date postingtime;

    public Dailypp() {
    }

    public Dailypp(DailyppId id) {
        this.id = id;
    }

    public Dailypp(DailyppId id, Double value, String qc, Date postingtime) {
        this.id = id;
        this.value = value;
        this.qc = qc;
        this.postingtime = postingtime;
    }

    @EmbeddedId
    @AttributeOverrides({
            @AttributeOverride(name = "lid", column = @Column(name = "lid", nullable = false, length = 8) ),
            @AttributeOverride(name = "ts", column = @Column(name = "ts", nullable = false, length = 2) ),
            @AttributeOverride(name = "obstime", column = @Column(name = "obstime", nullable = false, length = 29) ) })
    public DailyppId getId() {
        return this.id;
    }

    public void setId(DailyppId id) {
        this.id = id;
    }

    @Column(name = "value", precision = 17, scale = 17)
    public Double getValue() {
        return this.value;
    }

    public void setValue(Double value) {
        this.value = value;
    }

    @Column(name = "qc", length = 1)
    public String getQc() {
        return this.qc;
    }

    public void setQc(String qc) {
        this.qc = qc;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "postingtime", length = 29)
    public Date getPostingtime() {
        return this.postingtime;
    }

    public void setPostingtime(Date postingtime) {
        this.postingtime = postingtime;
    }
}