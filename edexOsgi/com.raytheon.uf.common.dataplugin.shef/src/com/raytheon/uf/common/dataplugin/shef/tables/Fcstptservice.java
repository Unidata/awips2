/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Fcstptservice generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Entity
@Table(name = "fcstptservice")
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class Fcstptservice extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String lid;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Servicetype servicetype;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Riverstat riverstat;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Double floodThres;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Short exceedProb;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Date analStartDate;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Date analEndDate;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Date implDate;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Date webDate;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Fcstptwatsup> fcstptwatsups = new HashSet<Fcstptwatsup>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Fcstptesp> fcstptesps = new HashSet<Fcstptesp>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Fcstptdeterm> fcstptdeterms = new HashSet<Fcstptdeterm>(0);

    public Fcstptservice() {
    }

    public Fcstptservice(String lid, Riverstat riverstat) {
        this.lid = lid;
        this.riverstat = riverstat;
    }

    public Fcstptservice(String lid, Servicetype servicetype,
            Riverstat riverstat, Double floodThres, Short exceedProb,
            Date analStartDate, Date analEndDate, Date implDate, Date webDate,
            Set<Fcstptwatsup> fcstptwatsups, Set<Fcstptesp> fcstptesps,
            Set<Fcstptdeterm> fcstptdeterms) {
        this.lid = lid;
        this.servicetype = servicetype;
        this.riverstat = riverstat;
        this.floodThres = floodThres;
        this.exceedProb = exceedProb;
        this.analStartDate = analStartDate;
        this.analEndDate = analEndDate;
        this.implDate = implDate;
        this.webDate = webDate;
        this.fcstptwatsups = fcstptwatsups;
        this.fcstptesps = fcstptesps;
        this.fcstptdeterms = fcstptdeterms;
    }

    @Id
    @Column(name = "lid", unique = true, nullable = false, length = 8)
    public String getLid() {
        return this.lid;
    }

    public void setLid(String lid) {
        this.lid = lid;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "service_type")
    public Servicetype getServicetype() {
        return this.servicetype;
    }

    public void setServicetype(Servicetype servicetype) {
        this.servicetype = servicetype;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "lid", unique = true, nullable = false, insertable = false, updatable = false)
    public Riverstat getRiverstat() {
        return this.riverstat;
    }

    public void setRiverstat(Riverstat riverstat) {
        this.riverstat = riverstat;
    }

    @Column(name = "flood_thres", precision = 17, scale = 17)
    public Double getFloodThres() {
        return this.floodThres;
    }

    public void setFloodThres(Double floodThres) {
        this.floodThres = floodThres;
    }

    @Column(name = "exceed_prob")
    public Short getExceedProb() {
        return this.exceedProb;
    }

    public void setExceedProb(Short exceedProb) {
        this.exceedProb = exceedProb;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "anal_start_date", length = 13)
    public Date getAnalStartDate() {
        return this.analStartDate;
    }

    public void setAnalStartDate(Date analStartDate) {
        this.analStartDate = analStartDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "anal_end_date", length = 13)
    public Date getAnalEndDate() {
        return this.analEndDate;
    }

    public void setAnalEndDate(Date analEndDate) {
        this.analEndDate = analEndDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "impl_date", length = 13)
    public Date getImplDate() {
        return this.implDate;
    }

    public void setImplDate(Date implDate) {
        this.implDate = implDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "web_date", length = 13)
    public Date getWebDate() {
        return this.webDate;
    }

    public void setWebDate(Date webDate) {
        this.webDate = webDate;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "fcstptservice")
    public Set<Fcstptwatsup> getFcstptwatsups() {
        return this.fcstptwatsups;
    }

    public void setFcstptwatsups(Set<Fcstptwatsup> fcstptwatsups) {
        this.fcstptwatsups = fcstptwatsups;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "fcstptservice")
    public Set<Fcstptesp> getFcstptesps() {
        return this.fcstptesps;
    }

    public void setFcstptesps(Set<Fcstptesp> fcstptesps) {
        this.fcstptesps = fcstptesps;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "fcstptservice")
    public Set<Fcstptdeterm> getFcstptdeterms() {
        return this.fcstptdeterms;
    }

    public void setFcstptdeterms(Set<Fcstptdeterm> fcstptdeterms) {
        this.fcstptdeterms = fcstptdeterms;
    }

}
