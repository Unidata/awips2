/**
 * This software was developed and / or modified by Raytheon Company,
 * pursuant to Contract DG133W-05-CQ-1067 with the US Government.
 * 
 * U.S. EXPORT CONTROLLED TECHNICAL DATA
 * This software product contains export-restricted data whose
 * export/transfer/disclosure is restricted by U.S. law. Dissemination
 * to non-U.S. persons whether in the United States or abroad requires
 * an export license or other authorization.
 * 
 * Contractor Name:        Raytheon Company
 * Contractor Address:     6825 Pine Street, Suite 340
 *                         Mail Stop B8
 *                         Omaha, NE 68106
 *                         402.291.0100
 * 
 * See the AWIPS II Master Rights File ("Master Rights File.pdf") for
 * further licensing information.
 **/
package com.raytheon.uf.common.dataplugin.shef.tables;

// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA
import java.io.Serializable;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.raytheon.uf.common.serialization.annotations.DynamicSerialize;
import com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement;

/**
 * Ingestfilter generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011 10672      jkorman     Move refactor to new project
 * Oct 07, 2013  2361      njensen     Removed XML annotations
 * May 16, 2016  5571      skorolev    Cleanup.
 * 
 * </pre>
 * 
 * @author jkorman
 */

@NamedQueries({ @NamedQuery(name = Ingestfilter.SELECT_INGESTFILTER_BY_LID_AND_PE, query = Ingestfilter.SELECT_INGESTFILTER_BY_LID_AND_PE_HQL) })
@Entity
@Table(name = "ingestfilter")
@DynamicSerialize
public class Ingestfilter implements Serializable {

    public static final String SELECT_INGESTFILTER_BY_LID_AND_PE = "SELECT_INGESTFILTER_BY_LID_AND_PE";

    public static final String SELECT_INGESTFILTER_BY_LID_AND_PE_HQL = "FROM Ingestfilter i WHERE i.id.lid = :lid AND i.id.pe = :pe";

    private static final long serialVersionUID = 1L;

    @DynamicSerializeElement
    private IngestfilterId id;

    @DynamicSerializeElement
    private Short tsRank;

    @DynamicSerializeElement
    private String ingest;

    @DynamicSerializeElement
    private String ofsInput;

    @DynamicSerializeElement
    private String stg2Input;

    public Ingestfilter() {
    }

    public Ingestfilter(IngestfilterId id) {
        this.id = id;
    }

    public Ingestfilter(IngestfilterId id, Short tsRank, String ingest,
            String ofsInput, String stg2Input) {
        this.id = id;
        this.tsRank = tsRank;
        this.ingest = ingest;
        this.ofsInput = ofsInput;
        this.stg2Input = stg2Input;
    }

    @EmbeddedId
    @AttributeOverrides({
            @AttributeOverride(name = "lid", column = @Column(name = "lid", nullable = false, length = 8)),
            @AttributeOverride(name = "pe", column = @Column(name = "pe", nullable = false, length = 2)),
            @AttributeOverride(name = "dur", column = @Column(name = "dur", nullable = false)),
            @AttributeOverride(name = "ts", column = @Column(name = "ts", nullable = false, length = 2)),
            @AttributeOverride(name = "extremum", column = @Column(name = "extremum", nullable = false, length = 1)) })
    public IngestfilterId getId() {
        return this.id;
    }

    public void setId(IngestfilterId id) {
        this.id = id;
    }

    @Column(name = "ts_rank")
    public Short getTsRank() {
        return this.tsRank;
    }

    public void setTsRank(Short tsRank) {
        this.tsRank = tsRank;
    }

    @Column(name = "ingest", length = 1)
    public String getIngest() {
        return this.ingest;
    }

    public void setIngest(String ingest) {
        this.ingest = ingest;
    }

    @Column(name = "ofs_input", length = 1)
    public String getOfsInput() {
        return this.ofsInput;
    }

    public void setOfsInput(String ofsInput) {
        this.ofsInput = ofsInput;
    }

    @Column(name = "stg2_input", length = 1)
    public String getStg2Input() {
        return this.stg2Input;
    }

    public void setStg2Input(String stg2Input) {
        this.stg2Input = stg2Input;
    }

}
