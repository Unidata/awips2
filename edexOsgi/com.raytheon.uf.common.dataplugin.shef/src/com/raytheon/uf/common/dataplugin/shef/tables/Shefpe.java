/**
* This software was developed and / or modified by Raytheon Company,
* pursuant to Contract DG133W-05-CQ-1067 with the US Government.
* 
* U.S. EXPORT CONTROLLED TECHNICAL DATA
* This software product contains export-restricted data whose
* export/transfer/disclosure is restricted by U.S. law. Dissemination
* to non-U.S. persons whether in the United States or abroad requires
* an export license or other authorization.
* 
* Contractor Name:        Raytheon Company
* Contractor Address:     6825 Pine Street, Suite 340
*                         Mail Stop B8
*                         Omaha, NE 68106
*                         402.291.0100
* 
* See the AWIPS II Master Rights File ("Master Rights File.pdf") for
* further licensing information.
**/
package com.raytheon.uf.common.dataplugin.shef.tables;
// default package
// Generated Oct 17, 2008 2:22:17 PM by Hibernate Tools 3.2.2.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.raytheon.uf.common.dataplugin.shef.tables.Adjustfactor;

/**
 * Shefpe generated by hbm2java
 * 
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Oct 17, 2008                        Initial generation by hbm2java
 * Aug 19, 2011      10672     jkorman Move refactor to new project
 * Oct 07, 2013       2361     njensen Removed XML annotations
 * 
 * </pre>
 * 
 * @author jkorman
 * @version 1.1
 */
@Entity
@Table(name = "shefpe")
@com.raytheon.uf.common.serialization.annotations.DynamicSerialize
public class Shefpe extends com.raytheon.uf.common.dataplugin.persist.PersistableDataObject implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String pe;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String name;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String engUnit;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private String metUnit;

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Datalimits> datalimitses = new HashSet<Datalimits>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Adjustfactor> adjustfactors = new HashSet<Adjustfactor>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Ofsdatatrans> ofsdatatranses = new HashSet<Ofsdatatrans>(0);

    @com.raytheon.uf.common.serialization.annotations.DynamicSerializeElement
    private Set<Locdatalimits> locdatalimitses = new HashSet<Locdatalimits>(0);

    public Shefpe() {
    }

    public Shefpe(String pe) {
        this.pe = pe;
    }

    public Shefpe(String pe, String name, String engUnit, String metUnit,
            Set<Datalimits> datalimitses, Set<Adjustfactor> adjustfactors,
            Set<Ofsdatatrans> ofsdatatranses, Set<Locdatalimits> locdatalimitses) {
        this.pe = pe;
        this.name = name;
        this.engUnit = engUnit;
        this.metUnit = metUnit;
        this.datalimitses = datalimitses;
        this.adjustfactors = adjustfactors;
        this.ofsdatatranses = ofsdatatranses;
        this.locdatalimitses = locdatalimitses;
    }

    @Id
    @Column(name = "pe", unique = true, nullable = false, length = 2)
    public String getPe() {
        return this.pe;
    }

    public void setPe(String pe) {
        this.pe = pe;
    }

    @Column(name = "name", length = 20)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "eng_unit", length = 8)
    public String getEngUnit() {
        return this.engUnit;
    }

    public void setEngUnit(String engUnit) {
        this.engUnit = engUnit;
    }

    @Column(name = "met_unit", length = 8)
    public String getMetUnit() {
        return this.metUnit;
    }

    public void setMetUnit(String metUnit) {
        this.metUnit = metUnit;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "shefpe")
    public Set<Datalimits> getDatalimitses() {
        return this.datalimitses;
    }

    public void setDatalimitses(Set<Datalimits> datalimitses) {
        this.datalimitses = datalimitses;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "shefpe")
    public Set<Adjustfactor> getAdjustfactors() {
        return this.adjustfactors;
    }

    public void setAdjustfactors(Set<Adjustfactor> adjustfactors) {
        this.adjustfactors = adjustfactors;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "shefpe")
    public Set<Ofsdatatrans> getOfsdatatranses() {
        return this.ofsdatatranses;
    }

    public void setOfsdatatranses(Set<Ofsdatatrans> ofsdatatranses) {
        this.ofsdatatranses = ofsdatatranses;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "shefpe")
    public Set<Locdatalimits> getLocdatalimitses() {
        return this.locdatalimitses;
    }

    public void setLocdatalimitses(Set<Locdatalimits> locdatalimitses) {
        this.locdatalimitses = locdatalimitses;
    }

}
