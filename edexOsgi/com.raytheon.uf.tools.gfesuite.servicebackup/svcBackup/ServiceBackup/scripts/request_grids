#!/bin/bash

##
# This software was developed and / or modified by Raytheon Company,
# pursuant to Contract DG133W-05-CQ-1067 with the US Government.
# 
# U.S. EXPORT CONTROLLED TECHNICAL DATA
# This software product contains export-restricted data whose
# export/transfer/disclosure is restricted by U.S. law. Dissemination
# to non-U.S. persons whether in the United States or abroad requires
# an export license or other authorization.
# 
# Contractor Name:        Raytheon Company
# Contractor Address:     6825 Pine Street, Suite 340
#                         Mail Stop B8
#                         Omaha, NE 68106
#                         402.291.0100
# 
# See the AWIPS II Master Rights File ("Master Rights File.pdf") for
# further licensing information.
#
##

##
#
# SOFTWARE HISTORY
# Date         Ticket#    Engineer    Description
# ------------ ---------- ----------- --------------------------
# Feb 09, 2015  #4103     dgilling    Refactored to support multiple svcbu 
#                                     sites.
#
##


if [ ${#AWIPS_HOME} = 0 ]
then
        path_to_script=`readlink -f $0`
		export AWIPS_HOME=$(dirname $(dirname $(dirname $(dirname  $path_to_script))))
fi

# $1 = Failed site

if [ $# -ne 1 ]
then
   echo "Incorrect number of arguments\nCorrect usage: request_grids failed_site"
   exit 1
fi

. ${AWIPS_HOME}/GFESuite/ServiceBackup/configuration/svcbu.env
source ${AWIPS_HOME}/GFESuite/ServiceBackup/scripts/serviceBackupUtil.sh

FAILED_SITE="${1}"

# Create the log file
configureLogging "svcbu_request_grids" ${FAILED_SITE}

# Check the status of the lock file to see if we are OK to proceed
lock_file=$(getLockFile "importGrids" ${FAILED_SITE})
lock_status=$(isOperationInProgress "importGrids" ${FAILED_SITE})
if [[ "${lock_status}" = "true" ]]
then
	echo "Cannot import grids for ${FAILED_SITE}.  Import grids process already in progress!"
	exit 1
fi

echo "IN_PROGRESS" > ${lock_file}

echo "Contacting central server to get grids for ${FAILED_SITE}"

sub=${FAILED_SITE}Grd
if [ ! -d ${SVCBU_HOME} ]
then
mkdir ${SVCBU_HOME}
fi

if [ -n "${SVCBU_WMO_HEADER}" ]; then
    msgSendOutput=$($MSG_SEND_COMMAND -a "DEFAULTNCF" -i ${SVCBU_WMO_HEADER} -s $sub -c 23)
    exitValue=$?
    if [ $exitValue -ne 0 ]; then
        echo "msg_send FAILED with exit value $exitValue and the following error: $msgSendOutput"
        echo "FAILED" > ${lock_file}
        exit 1
    fi
else
    msgSendOutput=$($MSG_SEND_COMMAND -a "DEFAULTNCF" -s $sub -c 23)
    exitValue=$?
    if [ $exitValue -ne 0 ]; then
        echo "msg_send FAILED with exit value $exitValue and the following error: $msgSendOutput"
        echo "FAILED" > ${lock_file}
        exit 1
    fi
fi
echo "Successfully sent message. MESSAGE ID: $msgSendOutput"

echo "Waiting to receive digital data..."
exit 0