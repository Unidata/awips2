<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/spring
    http://camel.apache.org/schema/spring/camel-spring.xsd">

  <!-- This will be the initial location for all MPE processes that are triggered
    based on a timer. TODO: as more of the conversion is completed, ideally we
    will be able to transition more MPE processes to be triggered based on data
    arrival rather than a timer. The objective will be to use many of the cron
    times already defined in: com.raytheon.uf.edex.ohd/resources/com.raytheon.uf.edex.ohd.properties. -->

    <bean id="biasmesgen" class="com.raytheon.uf.edex.plugin.mpe.biasmesgen.Biasmesgen" />

    <bean id="rocChecker" class="com.raytheon.uf.edex.plugin.mpe.rocchecker.RocChecker" />

    <bean id="buildHourly" class="com.raytheon.uf.edex.plugin.mpe.buildhourly.BuildHourly" />

    <bean id="hpeFieldgen" class="com.raytheon.uf.edex.plugin.mpe.fieldgen.hpe.HPEFieldgen" />

    <camelContext id="mpePeriodicTrigger-context" xmlns="http://camel.apache.org/schema/spring"
        errorHandlerRef="errorHandler">

        <endpoint id="mpefieldgenCron"
            uri="clusteredquartz://mpe/mpefieldgenPeriodic/?cron=${biasmesgen.cron}" />

        <endpoint id="alarmWhfsCron"
            uri="clusteredquartz://mpe/alarmWhfsPeriodic/?cron=${alarmwhfs.cron}" />

        <endpoint id="mpeBuildHourlyCron"
            uri="clusteredquartz://mpe/mpeBuildHourlyScheduled/?cron=${mpefieldgen.cron}" />

        <endpoint id="dqcPreprocCron_port"
            uri="clusteredquartz://mpe/dqcPreprocPeriodic/?cron=${dqcpreprocessor.cron}" />

        <route id="mpefieldgenPeriodic">
            <from uri="mpefieldgenCron" />
            <doTry>
                <bean ref="biasmesgen" method="execute" />
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:mpefieldgen?level=ERROR" />
                </doCatch>
            </doTry>
        </route>

        <route id="alarmWhfsPeriodic">
            <from uri="alarmWhfsCron" />
            <doTry>
                <bean ref="hpeFieldgen" method="execute" />
                <bean ref="rocChecker" method="execute" />
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:alarmWhfs?level=ERROR" />
                </doCatch>
            </doTry>
        </route>

        <route id="mpeBuildHourlyScheduled">
            <from uri="mpeBuildHourlyCron" />
            <doTry>
                <bean ref="buildHourly" method="runBuildHourly" />
                <doCatch>
                    <exception>java.lang.Throwable</exception>
                    <to uri="log:mpeBuildHourly?level=ERROR" />
                </doCatch>
            </doTry>
        </route>

    </camelContext>

</beans>