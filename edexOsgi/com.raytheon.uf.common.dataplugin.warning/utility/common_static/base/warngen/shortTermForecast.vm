#############################################################################
## SHORT TERM FORECAST                                                     ##
## CREATED BY PHIL KURIMSKI - WFO GRB                                      ##
## VERSION AWIPS II 1.0 -- AUG 19 2011 OB11.8                              ##
## EDITED BY MIKE DANGELO  2-27-2012                                       ##
## EDITED BY Phil Kurimski 3-01-2012 OB12.2.1-4                            ## 
##           Evan Bookbinder 4-25-2012  for OB 12.3.1 (MND)                ##
##           Mike Dangelo 9-13-2012 minor tweaks to ${variables}           ##  
##           Evan Bookbinder 9-18-2013 implemented config.vm               ## 
##           Mike Dangelo 1/23/2014 Added blankStatement logic - default   ## 
##                           is still near-severe storm w/list of cities   ##
##           Mike Rega 5/23/14 DR 17380 svr wx watch logic OB14.3.1        ##
##           Dangelo/Bookbinder 3/23-26/2015  Mixed Case edits ##
##           Evan Bookbinder 9/4/2015 Fixed line of storms grammar         ## 
##           Mike Dangelo 10-22-2015 checked for mixed case                ##  
#############################################################################
##
#parse("config.vm")
${WMOId} ${vtecOffice} 000000 ${BBBId}
${productId}${siteId}

#if(${productClass}=="T")
TEST...Short Term Forecast...TEST
#else
Short Term Forecast
#end
National Weather Service ${officeShort}
#backupText(${backupSite})
${dateUtil.format(${now}, ${timeFormat.header}, ${localtimezone})}

 
#if(${productClass}=="T")
...THIS MESSAGE IS FOR TEST PURPOSES ONLY...
#end

${ugcline}
#set($zoneList = "")
#foreach (${area} in ${areas})
#set($zoneList = "${zoneList}#capitalize(${area.name} 'FIRST')-")
#end
${zoneList}
${dateUtil.format(${now}, ${timeFormat.header}, ${localtimezone})}



#if(${productClass}=="T")
THIS IS A TEST MESSAGE. ##
#end
#######################################################################
## List of Event Types. 
#######################################################################
#set($eventType = "a thunderstorm")
#set($pathcastLead = "This storm will be near ")
#set($otherLead = ${pathcastLead})
#if(${list.contains(${bullets}, "thunderstorm")})
#if(${stormType} == "line")
	#set($eventType = "thunderstorms")
	#set($pathcastLead = "These storms will be near... ")
	#set($otherLead = "These storms")
	#set($reportType2 = "${otherLead} were")
#else
	#set($eventType = "a thunderstorm")
	#set($pathcastLead = "This storm will be near... ")
	#set($otherLead = "This storm")
	#set($reportType2 = "${otherLead} was")
#end
#end
#if(${list.contains(${bullets}, "rainShower")})
#if(${stormType} == "line")
	#set($eventType = "showers")
	#set($pathcastLead = "These showers will be near... ")
	#set($otherLead = "These showers")
	#set($reportType2 = "${otherLead} were")
#else
	#set($eventType = "a shower")
	#set($pathcastLead = "This shower will be near... ")
	#set($otherLead = "This shower")
	#set($reportType2 = "${otherLead} was")
#end
#end
#if(${list.contains(${bullets}, "snowShower")})
#if(${stormType} == "line")
	#set($eventType = "snow showers")
	#set($pathcastLead = "These snow showers will be near... ")
	#set($otherLead = "These snow showers")
	#set($reportType2 = "${otherLead} were")
#else
	#set($eventType = "a snow shower")
	#set($pathcastLead = "This snow shower will be near... ")
	#set($otherLead = "This snow shower")
	#set($reportType2 = "${otherLead} was")
#end
#end
#if(${list.contains(${bullets}, "snowSquall")})
	#set($eventType = "a snow squall")
	#set($pathcastLead = "The snow squalls will be near... ")
	#set($otherLead = "The snow squalls")
	#set($reportType2 = "${otherLead} were")
#end
#if(${list.contains(${bullets}, "leadingRain")})
	#set($eventType = "the leading edge of an area of rain")
	#set($pathcastLead = "The rain will begin at ")
	#set($otherLead = "the rain")
	#set($reportType2 = "${otherLead} was")
#end
#if(${list.contains(${bullets}, "leadingSnow")})
	#set($eventType = "the leading edge of an area of snow")
	#set($pathcastLead = "The snow will begin at ")
	#set($otherLead = "the snow")
	#set($reportType2 = "${otherLead} was")
#end
#if(${list.contains(${bullets}, "backedgeRain")})
	#set($eventType = "the back edge of an area of rain")
	#set($pathcastLead = "The rain will end at ")
	#set($otherLead = "the rain")
	#set($reportType2 = "${otherLead} was")
#end
#if(${list.contains(${bullets}, "backedgeSnow")})
	#set($eventType = "the back edge of an area of snow")
	#set($pathcastLead = "The snow will end at ")
	#set($otherLead = "the snow")
	#set($reportType2 = "${otherLead} WAS")
#end
#if(${list.contains(${bullets}, "showerThunderstorm")})
#if(${stormType} == "line")
	#set($eventType = "a line of showers and thunderstorms")
	#set($pathcastLead = "These storms will be near... ")
	#set($otherLead = "These storms")
	#set($reportType2 = "${otherLead} were")
#else
	#set($eventType = "showers and thunderstorms")
	#set($pathcastLead = "This storm will be near... ")
	#set($otherLead = "This storm")
	#set($reportType2 = "${otherLead} was")
#end
#end
#if(${list.contains(${bullets}, "gFront")})
	#set($eventType = "a gust front")
	#set($pathcastLead = "The gust front will be near... ")
	#set($otherLead = "The gust front")
	#set($reportType2 = "${otherLead} was")
#end
#if(${list.contains(${bullets}, "cFront")})
	#set($eventType = "a cold front")
	#set($pathcastLead = "The cold front will be near... ")
	#set($otherLead = "The cold front")
	#set($reportType2 = "${otherLead} was")
#end
#######################################################################
## Basis section that incorporates line phenomena...capable vs producing
## and based on selections above. 
#######################################################################
#set($report = "!** YOU DIDN'T SELECT A BASIS **! ${eventType}")
#if(${list.contains(${bullets}, "doppler")})
  #set($report = "Doppler radar indicated ${eventType} ")
#end
#if(${list.contains(${bullets}, "trainedSpotters")})
  #set($report = "trained weather spotters reported ${eventType} ") 
#end
#if(${list.contains(${bullets}, "lawEnforcement")})
  #set($report = "local law enforcement reported ${eventType} ") 
#end
#if(${list.contains(${bullets}, "public")})
  #set($report = "the public reported ${eventType} ") 
#end
#if(${list.contains(${bullets}, "satellite")})
  #set($report = "satellite imagery indicated ${eventType} ")
#end
######################################################
###### Storm current location description   ##########
######################################################
#if(${list.contains(${bullets}, "blankStatement")})
.NOW...

#else
.NOW...

#thirdBullet(${dateUtil},${event},${timeFormat},${localtimezone},${secondtimezone}), ${report}##
##Many of the variables passed below are controlled by config.vm
#if(${stormType} == "line")
#handleClosestPoints(${list}, ${closestPoints}, ${otherClosestPoints}, ${stormType}, ${nearPhrase} , ${maxLandNearDistance}, ${overPhrase}, ${maxLandOverDistance}, ${landDistanceUnits}, ${useSecondReferenceLine})
#else
#handleClosestPoints(${list}, ${closestPoints}, ${otherClosestPoints}, ${stormType}, ${nearPhrase} , ${maxLandNearDistance}, ${overPhrase}, ${maxLandOverDistance}, ${landDistanceUnits}, ${useSecondReferenceCell})
#end
#if(${movementSpeed} < ${landStationary} || ${stationary})
. ${reportType2} nearly stationary.
#else
, moving #direction(${movementDirectionRounded}) at ${mathUtil.roundTo5(${movementSpeed})} mph.
#end

#if(${productClass}=="T")
THIS IS A TEST MESSAGE. DO NOT TAKE ACTION BASED ON THIS MESSAGE.
#end

#################################################
## Set Pathcast
#################################################
#if(${list.contains(${bullets}, "pathcast")})
#if(${productClass}=="T")
THIS IS A TEST MESSAGE. ##
#end
#pathCast("${pathcastLead}" ${otherLead} ${pathCast} ${otherPoints} ${areas} ${dateUtil} ${timeFormat} 0) 

#elseif(${list.contains(${bullets}, "listofcities")})
#if(${productClass}=="T")
THIS IS A TEST MESSAGE. ##
#end
#### THE THIRD ARGUMENT IS A NUMBER SPECIFYING THE NUMBER OF COLUMNS TO OUTPUT THE CITIES LIST IN
#### 0 IS A ... SEPARATED LIST, 1 IS ONE PER LINE, >1 IS A COLUMN FORMAT
#### IF YOU USE SOMETHING OTHER THAN "LOCATIONS IMPACTED INCLUDE" LEAD IN BELOW, MAKE SURE THE
#### ACCOMPANYING XML FILE PARSE STRING IS CHANGED TO MATCH!
#locationsList("Locations impacted include..." ${otherLead} 0 ${cityList} ${otherPoints} ${areas} ${dateUtil} ${timeFormat} 0)

#end

#if(${list.contains(${bullets}, "gustFrontPassage")})
Gusty winds to !**WIND SPEED**! mph will accompany the front. 

#end
#if(${list.contains(${bullets}, "frontalPassage")})
Winds behind the cold front will suddenly shift to the !** DIRECTION **! and increase to !** SPEED **! mph.

#end
#if(${list.contains(${bullets}, "heavySnow")})
Heavy falling and blowing snow will create near zero visibility.

#end
#if(${list.contains(${bullets}, "snowAmt")})
Locations can expect !** EXPECTED SNOW **! inches of snow.

#end

## parse file command to pull in mile marker info
#parse("mileMarkers.vm")

#end

#############
## WATCHES ##
#############
#if(${list.contains(${includedWatches}, "TO.A")} && ${list.contains(${bullets}, "includeTorWatches")})
#inserttorwatches(${watches}, ${list}, ${secondtimezone}, ${dateUtil}, ${timeFormat})
#end
#if(${list.contains(${includedWatches}, "SV.A")} && ${list.contains(${bullets}, "includeSvrWatches")})
#insertsvrwatches(${watches}, ${list}, ${secondtimezone}, ${dateUtil}, ${timeFormat})
#end

$$

#parse("forecasterName.vm")
