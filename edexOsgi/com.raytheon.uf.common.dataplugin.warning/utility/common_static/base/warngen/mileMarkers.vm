##mileMarkers.vm - COMMENTS/INSTRUCTIONS MOVED TO END OF FILE (SEE HISTORY FOR EXPLANATION)
#set($hits = 0)
#set($bigList = '')
##set ($mm1 = [${EAX_i435mm},${EAX_i435mmid},'INTERSTATE 435','MILE MARKER',true])
##set ($mm2 = [${EAX_i70momm},${EAX_i70mommid},'INTERSTATE 70 IN MISSOURI','MILE MARKER',true])
##set ($mm3 = [${EAX_i35momm},${EAX_i35mommid},'INTERSTATE 70 IN KANSAS','MILE MARKER',true])
##set ($varList = [$mm1,$mm2,$mm3])
#foreach ($var in $varList)
#set ($checker = "#mmarkers(${list.get(${var},0)},${list.get(${var},1)},${list.get(${var},2)},${list.get(${var},3)},${list.get(${var},4)})")
#if ($checker.length() > 0)
#set ($hits = $hits + 1)
#set ($bigList = "$bigList $checker")
#end
#end
#if ($hits == 1)
This includes$bigList 
#end
#if ($hits > 1)
This includes the following highways...
$bigList
#end
#*
mileMarkers.vm
VERSION HISTORY:
      BOOKBINDER 9-16-2013 INITIAL VERSION
      BOOKBINDER 9-5-2014 Provided instructions/comments for localization
      BOOKBINDER 9-15-2017 Remove blank lines that were ending up in the output. 
      Also moved these comments to the end of the file. For some reason (bug?) a 
      comment block at the beginning of the file is introducing a leading blank line 
      in the output

THIS PLUG-IN VM FILE ALLOWS YOU TO CONSOLIDATE ALL YOUR 
MILEMARKER/EXIT/ROUTE OUTPUT INTO A SINGLE FUNCTION CALL
A #parse("mileMarkers.vm") entry in your WarnGen .vm templates will thus 
generate any milemarker info intersected by your warning polygon.

#############################
##GENERAL INFORMATION:
#############################
Mile Marker Macro (VM_global_library.vm):
#macro(mmarkers $markers $id $name $type $simplify)
$markers is a string, and is the exact "variable" set in the XML "pointSource" tag for this road
         - <pointSource variable="i70momm">
$id is the sequential ID database field to determine logical breaks in the mile markers 
           set in the XML "pointSource" tag for this road
         - <pointSource variable="i70mommid">
$name is a string "OUTPUT TEXT" of the road name
$type is a string which describes the type of "marker" 
         - may be "MILE MARKER" or something similar, or blank ""
         - "" is for use when town names (CHARLESTON) or exit names (THE SUNSET EXIT)
$simplify is a boolean value (true or false) 
         - true concatenates (FROM MM 2 to 4), 
         - false is a big list (MM 2...3...AND 4)   
###########################
CONFIGURATION:
###########################
#COMMENT OUT LINES 63-67 BELOW AS NEEDED, REPLACING/ADDING TO THE EXAMPLE WITH YOUR 
#MILE MARKER/ROUTE ENTRIES
#EACH LINE CONTAINS A VARIABLE MM1,MM2,MM3,etc... REFERENCING AN ARRAY (LIST) OF DATA THAT
#WILL BE PASSED TO THE MMARKERS ROUTINE. 

The items in the array are as follows:
1.) java Object - A pointSource object from mileMarkers.xml containing the milemarker names
2.) java Object - A pointSource object from mileMarkers.xml containing the milemarker IDs or index
3.) String -  A plain English name for the Interstates, Routes, etc..
4.) String -  A plain English name describing the output (mile marker, exit, etc...)
              Can be blank ''. Make sure the singular phrase is used (an "S" will be auto-applied for 
              plural values. e.g. MILE MARKERS 3 AND 10
5.) Boolean - A true/false value telling the function whether to group the milemarkers where
               possible, or list them individually. For mile markers that are text (such as exits or
               intersections, false might be a better option)
               
NOTE: PLEASE ENSURE PROPER SYNTAX. Java Objects are ${variable}, Text Strings are 'TEXT', and 
      Booleans are true/false (no quote)..see examples below
      ALSO ENSURE THAT EACH LINE CONTAINS A UNIQUE VARIABLE NAME: MM1, MM2, MM3, etc..

     ############################
     EXAMPLES:
     ############################
	 #set ($mm1 = [${EAX_i435mm},${EAX_i435mmid},'INTERSTATE 435','MILE MARKER',true])
	 #set ($mm2 = [${EAX_i70momm},${EAX_i70mommid},'INTERSTATE 70 IN MISSOURI','MILE MARKER',true])
	 #set ($mm3 = [${CTP_route22mm},${CTP_route22mmid},'ROUTE 22','EXIT',true])
     After creating these, we must create a matching varList containing all of our variable names (mm1,mm2,mm3)
     e.g.           
     #set ($varList = [$mm1,$mm2,$mm3])
*#