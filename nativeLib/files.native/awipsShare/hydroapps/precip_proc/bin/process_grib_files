#!/bin/ksh
# process_grib_files

# This script is called from MPE to create grib format files.  If the 
# mpe_d2d_display_grib token is set to "ON", then the grib file is copied to
# another directory and the notif_mpe.csh script is run.  This script 
# notifies the grib decoder that a file is available for decoding into netCDF
# format.  The netCDF file will then be made available for display in D2D.

# Export the value of FXA_HOME here.  This allows read_env.sh to be
# sourced before set_hydro_env.  This prevents set_hydro_env environment
# and token settings from being overwritten by read_env.sh.
# This has been added to allow the D2D log dir variable to be defined.
#
# An addition for OB7.2, this script will create a separate set of
# GRIB files in the qpe_grib_sbn directory which have the sub center
# code set to the id of the sending office.  GRIB files created in the
# standard qpe_grib directory have the sub center code set to 0.
#
# export FXA_HOME=/awips2/fxa

# Set up the AWIPS environment.
# . $FXA_HOME/readenv.sh

RUN_FROM_DIR=`dirname $0`
. $RUN_FROM_DIR/../../set_hydro_env

export grib_bin_dir=$(get_apps_defaults pproc_bin)
export grib_out_dir=$(get_apps_defaults mpe_grib_dir)
export grib_in_dir=$(get_apps_defaults rfcwide_xmrg_dir)
export MPE_SEND_QPE_TO_SBN=$(get_apps_defaults mpe_send_qpe_to_sbn)
export MPE_QPE_SBN_DIR=$(get_apps_defaults mpe_qpe_sbn_dir)
export MPE_QPE_GRIB_SBN_DIR=$(get_apps_defaults mpe_qpe_grib_sbn_dir)
export MPE_LOG_DIR=$(get_apps_defaults rfcwide_logs_dir)
export RFCWIDE_OUTPUT_DIR=$(get_apps_defaults rfcwide_output_dir)

#
# Define input file name and output file name
# in_file=xmrg file name
# out_file=grib file name
#

in_file=$1
out_file=$2
#
# Create log file name
#
griblog=$MPE_LOG_DIR/process_grib_files.log
tempname=$MPE_LOG_DIR/process_grib_files.tmp
#
#save only the latest in the log file
#
echo "-------------------------------" >> $griblog

tail -1200 $griblog > $tempname
mv $tempname $griblog 

Dte=`date -u`
echo Starting process_grib_files at $Dte >> $griblog

echo Input xmrg file $grib_in_dir/$in_file >> $griblog
echo Output grib file $grib_out_dir/$out_file >> $griblog

#
# Run gribit to generate grib format file
# input to gribit is xmrg format file, output from gribit is grib format file
# grib_bin_dir is defined in set_hydro_env
#

export grib_in_file=$in_file
export grib_out_file=$out_file

#
# Force the subcenter code to 0 in the created GRIB message.
#
export grib_set_subcenter_0=on

Dte=`date -u`
echo Invoking $grib_bin_dir/gribit at $Dte >> $griblog

$grib_bin_dir/gribit.LX 

#
# At RFCs, a second version of the grib file needs to be created for
# transmission over the SBN. This version of the GRIB file will contain
# the code of the sending office.
#

echo "The value of the mpe_send_qpe_to_sbn token is $MPE_SEND_QPE_TO_SBN" >> \
      $griblog

if [[ $MPE_SEND_QPE_TO_SBN = "ON" || $MPE_SEND_QPE_TO_SBN = "on" ]]
then

   echo "Producing GRIB file for transmission over the SBN." >> $griblog
#
# Build the path to the qpe SBN grib directory.
#
   export grib_in_dir=$MPE_QPE_SBN_DIR
   export grib_out_dir=$MPE_QPE_GRIB_SBN_DIR
#
#   This is important.  Must make sure thet sub_center code is set to the
#   sending RFC.
   export grib_set_subcenter_0=off
   echo "The subcenter code will be set to represent the sending office." >> \
      $griblog
   echo Input xmrg file $grib_in_dir/$in_file >> $griblog
   echo Output grib file $grib_out_dir/$out_file >> $griblog

#
# Call gribit
#
   Dte=`date -u`
   echo Invoking $grib_bin_dir/gribit at $Dte >> $griblog
   $grib_bin_dir/gribit.LX 

fi

#
# If token set to ON, then
# (1) Copy grib file to temp file    
# (2) mv temp file to $d2d_grib_dir to ensure that file is complete
# (3) Rename file by adding DDHHMMSS of creation time to name
# (4) Run script notif_mpe.csh
#

D2D_DISPLAY=$(get_apps_defaults mpe_d2d_display_grib)

echo Token mpe_d2d_display_grib is defined as $D2D_DISPLAY >> $griblog

if [[ $D2D_DISPLAY = "ON" || $D2D_DISPLAY = "on" ]]; then

  new_string=`date -u +%d%H%M%S`
  new_file_name=ZETA98_${out_file%.*}_$new_string.grib

  INPUT_DIR=$(get_apps_defaults d2d_input_dir)
  
  echo Copy grib file $RFCWIDE_OUTPUT_DIR/qpe_grib/$out_file  >> $griblog
  echo to $RFCWIDE_OUTPUT_DIR/qpe_grib/gribfile.tmp >> $griblog
  cp $RFCWIDE_OUTPUT_DIR/qpe_grib/$out_file $RFCWIDE_OUTPUT_DIR/qpe_grib/gribfile.tmp >> $griblog 2>&1
  
  echo Move and rename grib file $RFCWIDE_OUTPUT_DIR/qpe_grib/gribfile.tmp >> $griblog
  echo to $INPUT_DIR/$new_file_name >> $griblog   
  mv $RFCWIDE_OUTPUT_DIR/qpe_grib/gribfile.tmp $INPUT_DIR/$new_file_name >> $griblog 2>&1
  
#  echo Invoking $FXA_BIN_DIR/notif_mpe.csh >> $griblog    
#  $FXA_BIN_DIR/notif_mpe.csh

else
  echo Grib files are not converted to netCDF files to display on D2D >> $griblog  

fi


#
# If token set to ON, then send file to NPVU
#

#SEND_GRIB=$(get_apps_defaults mpe_send_grib)
#if [[ $SEND_GRIB = "ON" || $SEND_GRIB = "on" ]]; then

#fi

Dte=`date -u`
echo Completed process_grib_files at $Dte >> $griblog
