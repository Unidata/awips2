<?xml version="1.0" encoding="UTF-8"?> 
    <!--
        This_software_was_developed_and_/_or_modified_by_Raytheon_Company,
        pursuant_to_Contract_DG133W-05-CQ-1067_with_the_US_Government.
        
        U.S._EXPORT_CONTROLLED_TECHNICAL_DATA
        This_software_product_contains_export-restricted_data_whose
        export/transfer/disclosure_is_restricted_by_U.S._law._Dissemination
        to_non-U.S._persons_whether_in_the_United_States_or_abroad_requires
        an_export_license_or_other_authorization.
        
        Contractor_Name:________Raytheon_Company
        Contractor_Address:_____6825_Pine_Street,_Suite_340
        ________________________Mail_Stop_B8
        ________________________Omaha,_NE_68106
        ________________________402.291.0100
        
        See_the_AWIPS_II_Master_Rights_File_("Master_Rights_File.pdf")_for
        further_licensing_information.
    -->
    <!--
        This is an absolute override file, indicating that a higher priority
        version of the file will completely replace a lower priority version
        of the file.
    -->
<?xml-stylesheet type="text/css" href="plots.css"?>
<svg width="80" height="80" viewBox="0 0 80 80" overflow="visible"
    xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
    style="stroke: rgb(255,255,255);">
    <defs>
        <script type="text/python" plotDelegate="plotDelegate">
import datetime

class LdadMesoPlotDelegate(PlotDelegate):
    def __init__(self):
        PlotDelegate.__init__(self)

    def getSampleText(self, rec):
        s = rec.getString("stationId")
        s += ","
        s += str(datetime.datetime.utcfromtimestamp(rec.getLong("observationTime")/1000))
        s += ","
        s += getFloatAsString(rec, "temperature", "%.2f", 1.8, -459.67)
        s += ","
        s += getFloatAsString(rec, "dewpoint", "%.2f", 1.8, -459.67)
        s += ","
        s += getFloatAsString(rec, "relHumidity", "%.0f")
        s += ","
        s += getFloatAsString(rec, "wetBulbTemperature", "%.2f")
        s += ","
        s += getFloatAsString(rec, "windDir", "%.0f")
        s += ","
        s += getFloatAsString(rec, "windSpeed", "%.2f")
        s += ","
        s += getFloatAsString(rec, "windGust", "%.2f")
        s += ","
        s += getFloatAsString(rec, "pressure", "%.2f")
        s += ","
        s += getFloatAsString(rec, "stationPressure", "%.2f")
        s += ","
        s += getFloatAsString(rec, "altimeter", "%.2f")
        s += ","
        s += getFloatAsString(rec, "seaLevelPressure", "%.2f", 0.01)
        s += ","
        s += getIntAsString(rec, "pressChangeChar", "%d")
        s += ","
        s += getFloatAsString(rec, "pressChange3Hour", "%.2f")
        s += ","
        s += getFloatAsString(rec, "precipAccum", "%.2f")
        s += ","
        s += getIntAsString(rec, "precipIntensity", "%d")
        s += ","
        s += getIntAsString(rec, "precipType", "%d")
        s += ","
        s += getFloatAsString(rec, "totalCloudCover", "%.2f")
        s += ","
        s += rec.getString("skyCover")
        s += ","
        s += getFloatAsString(rec, "skyLayerBase", "%.2f")
        s += ","
        s += getIntAsString(rec, "cloudBaseHeight", "%d")
        s += ","
        s += getFloatAsString(rec, "visibility", "%.2f")
        s += ","
        s += rec.getString("visibilityStatus")
        s += ","
        s += rec.getString("presWeather")
        return s
        
def getFloatAsString(rec, key, format, scale=1, offset=0):
    f = rec.getFloat(key)
    if f == -9999:
        return ""
    f = f*scale + offset
    return format % f

def getIntAsString(rec, key, format):
    f = rec.getInt(key)
    if f == -9999:
        return ""
    return format % f

plotDelegate = LdadMesoPlotDelegate()
        </script>
        <style type="text/css">
        <![CDATA[
            @font-face { font-family: "WindSymbolFont";
                    src: url(WindSymbols.svg#WindSymbols); }
            @font-face { font-family: "WxSymbolFont";
                    src: url(WxSymbols.svg#WxSymbols); }
            @font-face { font-family: "SpecialSymbolFont";
                    src: url(SpecialSymbols.svg#SpecialSymbols); }
        ]]>
        </style>
        <symbol overflow="visible" id="plotData" class="info">
            <text id="sampleParamsBasic" plotMode="sample" class="text"
                plotParam="stationId,observationTime" x="0" y="0">
            </text>
            <text id="sampleParamsTemp" plotMode="sample" class="text"
                plotParam="temperature,dewpoint,relHumidity,wetBulbTemperature"
                x="0" y="0">
            </text>
            <text id="sampleParamsWind" plotMode="sample" class="text"
                plotParam="windDir,windSpeed,windGust" x="0" y="0">
            </text>
            <text id="sampleParamsPress" plotMode="sample" class="text"
                plotParam="pressure,stationPressure,altimeter,seaLevelPressure,pressChangeChar,pressChange3Hour"
                x="0" y="0">
            </text>
            <text id="sampleParamsPrecip" plotMode="sample" class="text"
                plotParam="precipAccum,precipIntensity,precipType" x="0"
                y="0">
            </text>
            <text id="sampleParamsOther" plotMode="sample" class="text"
                plotParam="totalCloudCover,skyCover,skyLayerBase,cloudBaseHeight,visibility,visibilityStatus,presWeather"
                x="0" y="0">
            </text>
            <g id="windVaneText" plotMode="barb" plotParam="windSpeed,windDir,windGust"
                plotUnit="kts" x="0" y="0" transform="rotate(0,0,0)">
                <text id="windVaneText" class="arrow" x="0" y="0">
                </text>
                <text id="windArrowText" class="barb" x="0" y="0">arrow
                </text>
                <text id="windGustText" class="text" x="0" y="32"
                    style="text-anchor: middle">
                </text>
            </g>
            <text id="tempText" plotMode="text" plotParam="temperature"
                plotUnit="°F" plotFormat="%3.0f" style="text-anchor: end;"
                x="-10px" y="-10px">75</text>
            <text id="dewText" plotMode="text" plotParam="DpT"
                plotUnit="°F" plotFormat="%3.0f" style="text-anchor: end;"
                x="-10px" y="10px">59</text>
            <text id="pressure" plotMode="text" plotParam="seaLevelPressure"
                plotUnit="daPa" plotFormat="%5.0f" plotTrim="2"
                style="text-anchor: start;" x="10px" y="-10px">018</text>
        </symbol>
    </defs>
    <use id="wind" x="40" y="40" width="80" height="80" visibility="visible"
        xlink:href="#plotData" />
</svg>