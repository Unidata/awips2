<?xml version="1.0" encoding="UTF-8"?> 
    <!--
        This_software_was_developed_and_/_or_modified_by_Raytheon_Company,
        pursuant_to_Contract_DG133W-05-CQ-1067_with_the_US_Government.
        
        U.S._EXPORT_CONTROLLED_TECHNICAL_DATA
        This_software_product_contains_export-restricted_data_whose
        export/transfer/disclosure_is_restricted_by_U.S._law._Dissemination
        to_non-U.S._persons_whether_in_the_United_States_or_abroad_requires
        an_export_license_or_other_authorization.
        
        Contractor_Name:________Raytheon_Company
        Contractor_Address:_____6825_Pine_Street,_Suite_340
        ________________________Mail_Stop_B8
        ________________________Omaha,_NE_68106
        ________________________402.291.0100
        
        See_the_AWIPS_II_Master_Rights_File_("Master_Rights_File.pdf")_for
        further_licensing_information.
    -->
    <!--
        This is an absolute override file, indicating that a higher priority
        version of the file will completely replace a lower priority version
        of the file.
    -->
<?xml-stylesheet type="text/css" href="plots.css"?>
<svg width="100" height="100" viewBox="0 0 100 100" overflow="visible"
    xmlns="http://www.w3.org/2000/svg" contentScriptType="text/python"
    xmlns:xlink="http://www.w3.org/1999/xlink" style="stroke: rgb(255,255,255);">
    <defs>
        <script type="text/python" plotDelegate="plotDelegate">
            <![CDATA[
                class MaritimePlotDelegate(PlotDelegate):
                    def __init__(self):
                        PlotDelegate.__init__(self)
                
                    def getSampleText(self, rec):
                        raw = rec.getString("rawReport")
                        if raw.startswith("BBXX"):
                            raw = raw[5:]
                        elif raw.startswith("CMAN"):
                            raw = raw[11:]
                        elif raw.startswith("MAROB"):
                            raw = raw[7:]
                        return raw      
                
                plotDelegate = MaritimePlotDelegate()
            ]]>
        </script>
        <style type="text/css">
            <![CDATA[
                @font-face { font-family: "WindSymbolFont";
                        src: url(WindSymbols.svg#WindSymbols); }
                @font-face { font-family: "WxSymbolFont";
                        src: url(WxSymbols.svg#WxSymbols); }
                @font-face { font-family: "SpecialSymbolFont";
                        src: url(SpecialSymbols.svg#SpecialSymbols); }
                @font-face { font-family: "LargeSpecialSymbolFont";
                        src: url(LargeSpecialSymbols.svg#LrgSpecialSymbols); }
                text.large
                    {
                        fill: none;
                        stroke-width: 1px;
                        font-size: 1.5em;
                        font-family: LargeSpecialSymbolFont;
                    }
            ]]>
        </style>
        <symbol overflow="visible" id="plotData" class="info">
            <text id="sample" plotMode="sample" class="text"
                plotParam="rawReport" x="0" y="0">0</text>
            <text id="cloudCoverText" plotMode="range" class="special"
                plotLookupTable="maritime_cloud_chars.txt" plotParam="totCloudAmount"
                x="0" y="0">0</text>
            <text id="pressure" plotMode="text" plotParam="seaLevelPress"
                plotUnit="daPa" plotFormat="%5.0f" plotTrim="2"
                style="text-anchor: start;" x="10px" y="-10px">018</text>
            <text id="pressChngText" plotMode="text" plotParam="pressChange3Hour"
                plotUnit="daPa" plotFormat="%02.0f" style="text-anchor: start;"
                x="10px" y="0">018</text>
            <text id="chngCharText" plotMode="table" class="weather"
                plotLookupTable="press_change_char_lookup.txt"
                plotParam="pressChangeChar" style="text-anchor: start;"
                x="35px" y="0">KOAX</text>
            <text id="tempText" plotMode="text" plotParam="temperature"
                plotUnit="°F" plotFormat="%3.0f" style="text-anchor: end;"
                x="-10px" y="-10px">75</text>
            <text id="dewText" plotMode="text" plotParam="dewpoint"
                plotUnit="°F" plotFormat="%3.0f" style="text-anchor: end;"
                x="-10px" y="10px">59</text>
            <g id="windVaneText" plotMode="barb" plotParam="windSpeed,windDir,windGust"
                plotUnit="kts" x="0" y="0" transform="rotate(0,0,0)">
                <text id="windVaneText" class="arrow" x="0" y="0">0
                </text>
                <text id="windArrowText" class="barb" x="0" y="0">arrow
                </text>
                <text id="windGustText" class="text" x="0" y="32"
                    style="text-anchor: middle">0</text>
            </g>
            <text id="pkwndText" plotMode="text" plotParam="peakWindSpeed"
                plotUnit="kts" plotFormat="PK%2.0f" style="text-anchor: end;"
                x="-10px" y="20px">59</text>
            <text id="seaText" plotMode="text" plotParam="seaSurfaceTemp"
                plotUnit="°F" plotFormat="%3.0f" style="text-anchor: start;"
                x="10px" y="10px">75</text>
            <text id="presentWxText" plotMode="recursive_translation"
                class="weather" plotLookupTable="wx_symbol_trans.txt"
                plotParam="presWeather" style="text-anchor: end" x="-10px"
                y="0px">0</text>
        </symbol>
    </defs>
    <use id="wind" x="50" y="50" width="100" height="100"
        visibility="visible" xlink:href="#plotData" />
</svg>