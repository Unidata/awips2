<?xml version="1.0" encoding="UTF-8"?> 
    <!--
        This_software_was_developed_and_/_or_modified_by_Raytheon_Company,
        pursuant_to_Contract_DG133W-05-CQ-1067_with_the_US_Government.
        
        U.S._EXPORT_CONTROLLED_TECHNICAL_DATA
        This_software_product_contains_export-restricted_data_whose
        export/transfer/disclosure_is_restricted_by_U.S._law._Dissemination
        to_non-U.S._persons_whether_in_the_United_States_or_abroad_requires
        an_export_license_or_other_authorization.
        
        Contractor_Name:________Raytheon_Company
        Contractor_Address:_____6825_Pine_Street,_Suite_340
        ________________________Mail_Stop_B8
        ________________________Omaha,_NE_68106
        ________________________402.291.0100
        
        See_the_AWIPS_II_Master_Rights_File_("Master_Rights_File.pdf")_for
        further_licensing_information.
    -->
     <!--
        This is an absolute override file, indicating that a higher priority
        version of the file will completely replace a lower priority version
        of the file.
    -->
<?xml-stylesheet type="text/css" href="plots.css"?>
<svg width="80" height="80" viewBox="0 0 80 80" overflow="visible"
    contentScriptType="text/python" xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink" style="stroke: rgb(255,255,255);">
    <defs>
        <script type="text/python" plotDelegate="plotDelegate">
from qcplot import QCReport

class MsasWindQcFailPlotDelegate(PlotDelegate):
    def __init__(self):
        PlotDelegate.__init__(self)
        self.report = QCReport(['uw', 'vw'],
            ['uw', 'vw'],
            None, None)        
        
    def getSampleText(self, rec):
        if self.report.isOk():
            return None
        else:
            return self.report.getTableText()
            
    def isValid(self, rec):
        self.report.setPointDataView(rec)
        sid = rec.getString("stationName")
        self.report.setTitle(sid)
        return self.report.isFailed()

plotDelegate = MsasWindQcFailPlotDelegate()
        </script>
        <style type="text/css">
            <![CDATA[
                @font-face { font-family: "WindSymbolFont";
                        src: url(WindSymbols.svg#WindSymbols); }
                @font-face { font-family: "WxSymbolFont";
                        src: url(WxSymbols.svg#WxSymbols); }
                @font-face { font-family: "SpecialSymbolFont";
                        src: url(SpecialSymbols.svg#SpecialSymbols); }
            ]]>
        </style>
        <symbol overflow="visible" id="plotData" class="info">
            <text id="extraParams" plotMode="null" class="text"
                plotParam="stationName,uw,uwQCA,uwQCR,uwDD,vw,vwQCA,vwQCR,vwDD"
                x="0" y="0" visibility="hidden">0</text>
            <g id="windVaneText" plotMode="barb" plotParam="wSp,WD"
                plotUnit="kts" x="0" y="0" transform="rotate(0,0,0)">
                <text id="windVaneText" class="arrow" x="0" y="0">0
                </text>
                <text id="windArrowText" class="barb" x="0" y="0">arrow
                </text>
            </g>
        </symbol>
    </defs>
    <use id="wind" x="40" y="40" width="80" height="80" visibility="visible"
        xlink:href="#plotData" />
</svg>