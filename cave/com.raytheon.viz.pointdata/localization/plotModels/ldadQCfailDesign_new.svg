<?xml version='1.0' encoding='UTF-8'?>
<!--
        This_software_was_developed_and_/_or_modified_by_Raytheon_Company,
        pursuant_to_Contract_DG133W-05-CQ-1067_with_the_US_Government.
        
        U.S._EXPORT_CONTROLLED_TECHNICAL_DATA
        This_software_product_contains_export-restricted_data_whose
        export/transfer/disclosure_is_restricted_by_U.S._law._Dissemination
        to_non-U.S._persons_whether_in_the_United_States_or_abroad_requires
        an_export_license_or_other_authorization.
        
        Contractor_Name:________Raytheon_Company
        Contractor_Address:_____6825_Pine_Street,_Suite_340
        ________________________Mail_Stop_B8
        ________________________Omaha,_NE_68106
        ________________________402.291.0100
        
        See_the_AWIPS_II_Master_Rights_File_("Master_Rights_File.pdf")_for
        further_licensing_information.
    -->
    <!--
        This is an absolute override file, indicating that a higher priority
        version of the file will completely replace a lower priority version
        of the file.
    -->
<?xml-stylesheet type='text/css' href='newplots.css'?>
<svg contentScriptType="text/python" height="80" overflow="visible" plugin="qc" style="stroke: rgb(255,255,255);" viewBox="0 0 80 80" width="80" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <defs>
        <script plotDelegate="plotDelegate" type="text/python">
from qcplot import QCReport

class LdadQcPlotDelegate(PlotDelegate):
    def __init__(self):
        PlotDelegate.__init__(self)
        self.report = QCReport(['seaLevelPressure','temperature','dewpoint',
            'windDir','windSpeed','precipAccum'],
            ['slp','T','Td','DD','FF','pcp'],
            None, None)            
        
    def getSampleText(self, rec):       
        sid = rec.getString("providerId") + rec.getString("dataProvider")
        if self.report.isFailed():
            return sid + "\n" + self.report.getTableText()
        else:
            return sid
            
    def isValid(self, rec):
        self.report.setPointDataView(rec)
        return self.report.isFailed()

plotDelegate = LdadQcPlotDelegate()
        </script>
        <style type="text/css">
            <![CDATA[
                @font-face { font-family: "WindSymbolFont";
                        src: url(WindSymbols.svg#WindSymbols); }
                @font-face { font-family: "WxSymbolFont";
                        src: url(WxSymbols.svg#WxSymbols); }
                @font-face { font-family: "SpecialSymbolFont";
                        src: url(SpecialSymbols.svg#SpecialSymbols); }
                @font-face { font-family: "MarkerSymbolFont";
              src: url(MarkerSymbols.svg#MarkerSymbols); }
]]>
        </style>
        <symbol class="info" id="plotData" onload="howdy()" overflow="visible">
            <text id="extraParams" plotMode="NONE" plotParam="providerId,dataProvider,seaLevelPressureQCA,seaLevelPressureQCR,seaLevelPressureDD,temperatureQCA,temperatureQCR,temperatureDD,dewpointQCA,dewpointQCR,dewpointDD,windDirQCA,windDirQCR,windDirDD,windSpeedQCA,windSpeedQCR,windSpeedDD,precipAccumQCA,precipAccumQCR,precipAccumDD" visibility="hidden" x="0" y="0">0</text>
            <g id="windVaneText" plotParam="windSpeed,windDir,windGust (kts)" transform="rotate(0,0,0)" x="0" y="0">
                <text class="arrow" id="windVaneText" x="0" y="0">0</text>
                <text class="barb" id="windArrowText" x="0" y="0">arrow
                </text>
                <text class="text" id="windGustText" style="text-anchor: middle" x="0" y="32">0</text>
            </g>
            <text id="tempText" plotParam="temperature (°F)" style="text-anchor: end;" x="-10px" y="-10px">75</text>
            <text id="dewText" plotParam="dewpoint (°F)" style="text-anchor: end;" x="-10px" y="10px">59</text>
            <text id="pressure" plotParam="seaLevelPressure (dPa)" style="text-anchor: start;" x="10px" y="-10px">018</text>
            <text class="marker" id="marker" plotParam="Marker" x="-20px" y="-20px"> </text>
</symbol>
    </defs>
    <use height="80" id="wind" visibility="visible" width="80" x="40" y="40" xlink:href="#plotData" />
</svg>
